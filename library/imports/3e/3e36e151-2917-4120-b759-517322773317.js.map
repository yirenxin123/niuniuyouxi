{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BasePop",
    "require",
    "MessageFactory",
    "Cmd_Bullfight",
    "GamePlayer",
    "cc",
    "Class",
    "extends",
    "properties",
    "ScrollActors",
    "ScrollView",
    "PlayerCell",
    "Prefab",
    "TouristCell",
    "WatcherTitle",
    "Node",
    "ActorTitle",
    "WatcherCount",
    "Label",
    "RoundNum",
    "timeLabel",
    "onLoad",
    "self",
    "_super",
    "node",
    "on",
    "EventType",
    "TOUCH_END",
    "event",
    "log",
    "dismiss",
    "bind",
    "runIn",
    "createMessageReq",
    "US_REQ_PLAYER_LIST_CMD_ID",
    "send",
    "onMessage",
    "msg",
    "data",
    "cmd",
    "US_RESP_PLAYER_LIST_CMD_ID",
    "onGetPlayersList",
    "code",
    "SocketRetCode",
    "RET_SUCCESS",
    "setTableInfo",
    "remainTime",
    "roundNum",
    "height",
    "refreshActors",
    "actors",
    "refreshWatchers",
    "watchers",
    "content",
    "totalHeight",
    "active",
    "actorsHeight",
    "index",
    "length",
    "item",
    "instantiate",
    "getContentSize",
    "setPosition",
    "p",
    "addChild",
    "coin",
    "total",
    "win",
    "getComponent",
    "updatePlayerScore",
    "name",
    "position",
    "x",
    "y",
    "string",
    "watcherHeight",
    "width",
    "parseInt",
    "updateInfo",
    "headurl",
    "time",
    "getTime",
    "vTime",
    "Number",
    "hour",
    "min",
    "second",
    "getTimeData",
    "Array",
    "join",
    "slice",
    "bg",
    "runAction",
    "moveBy"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var BasePop = require('BasePop');\r\nvar MessageFactory = require('MessageFactory');\r\nvar Cmd_Bullfight = require('Cmd_Bullfight');\r\nvar GamePlayer = require('GamePlayer');\r\n\r\n\r\ncc.Class({\r\n    extends: BasePop,\r\n\r\n    properties: {\r\n\r\n        ScrollActors  : cc.ScrollView,\r\n        //ScrollWatchers : cc.ScrollView,\r\n\r\n        PlayerCell : cc.Prefab,\r\n        TouristCell : cc.Prefab,\r\n        WatcherTitle : cc.Node,\r\n        ActorTitle : cc.Node,\r\n        WatcherCount : cc.Label,\r\n        RoundNum : cc.Label,\r\n        timeLabel : cc.Label,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        var self = this;\r\n        this._super();\r\n        this.node.on(cc.Node.EventType.TOUCH_END, function(event){\r\n            cc.log(\"stop event\");\r\n            self.dismiss();\r\n        }.bind(this));\r\n        this.runIn();\r\n        MessageFactory.createMessageReq(Cmd_Bullfight.US_REQ_PLAYER_LIST_CMD_ID).send();\r\n    },\r\n\r\n    /*********************Network***************************/\r\n\r\n    onMessage : function (event) {\r\n        cc.log(\"Bullfight_PlayerList.onMessage\");\r\n        //this._super(event);\r\n        var msg = event.data;\r\n        var cmd = msg.cmd;\r\n        switch (cmd) {\r\n            case Cmd_Bullfight.US_RESP_PLAYER_LIST_CMD_ID:\r\n                this.onGetPlayersList(msg);\r\n                break;\r\n        }\r\n    },\r\n\r\n    onGetPlayersList : function (msg) {\r\n        cc.log(\"Bullfight_PlayerList.onGetPlayersList\");\r\n        if(msg.code == SocketRetCode.RET_SUCCESS)\r\n        {\r\n            this.setTableInfo(msg.remainTime, msg.roundNum);\r\n            var height = 0\r\n\r\n            height = this.refreshActors(msg.actors );\r\n            height = this.refreshWatchers(msg.watchers, height);\r\n\r\n            if (height > this.ScrollActors.content.height) {\r\n                this.ScrollActors.content.height = height;\r\n            }\r\n        }\r\n    },\r\n\r\n/*\r\n* //参与者信息\r\n type ACTOR_T struct {\r\n Uid       uint32 `json:\"uid\"`\r\n Name      string `json:\"name\"`\r\n HeadUrl   string `json:\"headurl\"`\r\n TotalCoin int64  `json:\"total\"` //总带入金币\r\n WinCoin   int64  `json:\"win\"`   //输赢多少金币\r\n }\r\n* */\r\n    refreshActors : function(actors)\r\n    {\r\n\r\n        cc.log(\"Bullfight_PlayerList.refreshActors\");\r\n        var totalHeight = 100;\r\n\r\n        this.ActorTitle.active = true;\r\n\r\n        if (actors)\r\n        {\r\n            var actorsHeight = 0;\r\n            for (var index = 0;actors && index < actors.length;index++)\r\n            {\r\n                var item = cc.instantiate(this.PlayerCell);\r\n                actorsHeight = item.getContentSize().height;\r\n                item.setPosition(cc.p(0, -index*item.getContentSize().height - item.getContentSize().height*1.5));\r\n                this.ScrollActors.content.addChild(item);\r\n\r\n                var coin = actors[index].total + actors[index].win;\r\n                item.getComponent(\"Bullfight_PlayerCell\").updatePlayerScore(actors[index].name,\r\n                    actors[index].total, coin,  actors[index].win);\r\n            }\r\n\r\n            totalHeight += (((actors && actors.length > 0) ? this.ActorTitle.getContentSize(true).height : 0) + actors.length * actorsHeight);\r\n        }\r\n\r\n        return totalHeight;\r\n    },\r\n\r\n    /*\r\n    *  //看客信息\r\n     type WATCHER_T struct {\r\n     Uid     uint32 `json:\"uid\"`\r\n     Name    string `json:\"name\"`\r\n     HeadUrl string `json:\"headurl\"`\r\n     }\r\n    * */\r\n    refreshWatchers : function(watchers, totalHeight)\r\n    {\r\n        cc.log(\"Bullfight_PlayerList.refreshWatchers,totalHeight = \" + totalHeight);\r\n        this.WatcherTitle.position = (cc.p(this.WatcherTitle.position.x,\r\n                                           this.WatcherTitle.position.y - totalHeight));\r\n        this.WatcherTitle.active = true;\r\n        this.WatcherCount.string = watchers.length;\r\n\r\n        var watcherHeight = 0;\r\n        for(var index = 0;watchers && index < watchers.length;index++)\r\n        {\r\n            var item = cc.instantiate(this.TouristCell);\r\n            watcherHeight = item.getContentSize().height;\r\n\r\n            item.setPosition(cc.p(item.getContentSize().width/2 + (index%3)*item.getContentSize().width\r\n                - this.ScrollActors.content.getContentSize(true).width/2,\r\n                - totalHeight  - item.getContentSize().height * parseInt(index/3) - item.getContentSize().height/2\r\n                - (this.WatcherTitle.getContentSize().height + 5)));\r\n\r\n            this.ScrollActors.content.addChild(item);\r\n            item.getComponent(\"Bullfight_Tourist\").updateInfo(watchers[index].headurl, watchers[index].name);\r\n        }\r\n\r\n        totalHeight += this.WatcherTitle.getContentSize().height;\r\n        if (watchers) {\r\n            totalHeight += (watchers.length + 1) * watcherHeight;\r\n        }\r\n        return totalHeight;\r\n    },\r\n    \r\n    setTableInfo : function (time,roundNum) {\r\n\r\n        this.RoundNum.string = \"第\" + roundNum + \"手\";\r\n        this.timeLabel.string = this.getTime(time);\r\n    },\r\n    \r\n    getTime : function (vTime) {\r\n        var time   = Number(vTime);\r\n        var hour   = parseInt(time/60/60);\r\n        var min    = parseInt((time - 3600*hour)/60);\r\n        var second = time - 3600*hour - 60*min;\r\n\r\n        cc.log(\"getTime hour=\", hour, \" min=\", min, \" second=\", second);\r\n\r\n        return this.getTimeData(hour) + \":\" + this.getTimeData(min) + \":\" + this.getTimeData(second);\r\n    },\r\n    \r\n    getTimeData : function (time) {\r\n        return (Array(2).join(0)+time).slice(-2);\r\n    },\r\n\r\n    runIn : function () {\r\n        this.bg.runAction(cc.moveBy(0.4,cc.p(this.bg.getContentSize().width,0)));\r\n    },\r\n});\r\n"
  ]
}