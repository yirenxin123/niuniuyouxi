{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "module",
    "exports",
    "cc",
    "Class",
    "download",
    "storagePath",
    "localManifest",
    "remoteManifest",
    "_storagePath",
    "_localManifest",
    "_remoteManifest",
    "_nocache",
    "Date",
    "getTime",
    "_downloadUnits",
    "_completeUnits",
    "_failedUnits",
    "_deleteUnits",
    "_downloadComplete",
    "_downloadFailed",
    "_failCount",
    "_concurrentCurrent",
    "_analysisDownloadUnits",
    "_analysisDeleteUnits",
    "_totalUnits",
    "length",
    "log",
    "format",
    "_items",
    "slice",
    "_downloadAsset",
    "onComplete",
    "key",
    "assets",
    "hasOwnProperty",
    "game",
    "AssetConfig",
    "debugRes",
    "md5",
    "_addDownloadUnits",
    "push",
    "state",
    "recovery",
    "config",
    "textUpdate",
    "server",
    "testCdn",
    "relativePath",
    "shift",
    "url",
    "path",
    "join",
    "line",
    "complete",
    "asset",
    "_saveAsset",
    "debugProgress",
    "onProgress",
    "_isUpdateCompleted",
    "bind",
    "error",
    "HttpEvent",
    "NO_NETWORK",
    "onNoNetwork",
    "http",
    "getByArraybuffer",
    "_noCache",
    "concurrent",
    "_downloadFailedAssets",
    "handleCount",
    "_deleteAssets",
    "onFaild",
    "i",
    "filePath",
    "jsb",
    "fileUtils",
    "removeFile",
    "sys",
    "isNative",
    "storeDirectory",
    "substr",
    "lastIndexOf",
    "storePath",
    "isDirectoryExist",
    "createDirectory",
    "writeDataToFile",
    "Uint8Array"
  ],
  "mappings": ";;AAAA;;;;;;;;;;;AAWAA,OAAOC,OAAP,GAAiBC,GAAGC,KAAH,CAAS;AACtB;AACAC,cAAU,kBAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,cAAtC,EAAsD;AAC5D,aAAKC,YAAL,GAA0BH,WAA1B;AACA,aAAKI,cAAL,GAA0BH,aAA1B;AACA,aAAKI,eAAL,GAA0BH,cAA1B;;AAEA,aAAKI,QAAL,GAA2B,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAA1B;;AAEA,aAAKC,cAAL,GAA0B,EAA1B,CAP4D,CAOvB;AACrC,aAAKC,cAAL,GAA0B,EAA1B,CAR4D,CAQvB;AACrC,aAAKC,YAAL,GAA0B,EAA1B,CAT4D,CASvB;AACrC,aAAKC,YAAL,GAA0B,EAA1B,CAV4D,CAUvB;;AAErC,aAAKC,iBAAL,GAA0B,CAA1B,CAZ4D,CAYvB;AACrC,aAAKC,eAAL,GAA0B,CAA1B,CAb4D,CAavB;AACrC,aAAKC,UAAL,GAA0B,CAA1B,CAd4D,CAcvB;AACrC,aAAKC,kBAAL,GAA0B,CAA1B,CAf4D,CAevB;;AAErC,aAAKC,sBAAL;AACA,aAAKC,oBAAL;;AAEA;AACA,aAAKC,WAAL,GAAmB,KAAKN,iBAAL,GAAyB,KAAKJ,cAAL,CAAoBW,MAAhE;;AAEAvB,WAAGwB,GAAH,CAAO,mBAAmBC,MAAnB,CAA0B,KAAKb,cAAL,CAAoBW,MAA9C,CAAP;AACAvB,WAAGwB,GAAH,CAAO,mBAAmBC,MAAnB,CAA0B,KAAKV,YAAL,CAAkBQ,MAA5C,CAAP;;AAEA,aAAKG,MAAL,GAAc,KAAKd,cAAL,CAAoBe,KAApB,CAA0B,CAA1B,CAAd;;AAEA,YAAI,KAAKD,MAAL,CAAYH,MAAZ,GAAqB,CAAzB,EAA2B;AACvB,iBAAKK,cAAL;AACH,SAFD,MAGI;AACA5B,eAAGwB,GAAH,CAAO,gBAAP;AACA,gBAAI,KAAKK,UAAT,EAAqB,KAAKA,UAAL;AACxB;AACJ,KArCqB;;AAuCtB;AACAT,4BAAyB,kCAAU;AAC/B,aAAK,IAAIU,GAAT,IAAgB,KAAKtB,eAAL,CAAqBuB,MAArC,EAA6C;AACzC,gBAAI,KAAKxB,cAAL,CAAoBwB,MAApB,CAA2BC,cAA3B,CAA0CF,GAA1C,CAAJ,EAAoD;AAChD,oBAAIG,KAAKC,WAAL,CAAiBC,QAAjB,IAA6B,KAAK3B,eAAL,CAAqBuB,MAArB,CAA4BD,GAA5B,EAAiCM,GAAjC,IAAwC,KAAK7B,cAAL,CAAoBwB,MAApB,CAA2BD,GAA3B,EAAgCM,GAAzG,EAA8G;AAC1G;AACA,yBAAKC,iBAAL,CAAuBP,GAAvB;AACH;AACJ,aALD,MAMK;AACD;AACA,qBAAKO,iBAAL,CAAuBP,GAAvB;AACH;AACJ;AACJ,KArDqB;;AAuDtB;AACAT,0BAAuB,gCAAU;AAC5B,aAAK,IAAIS,GAAT,IAAgB,KAAKvB,cAAL,CAAoBwB,MAApC,EAA4C;AACzC,gBAAI,KAAKvB,eAAL,CAAqBuB,MAArB,CAA4BC,cAA5B,CAA2CF,GAA3C,KAAmD,KAAvD,EAA8D;AAC1D;AACA,qBAAKf,YAAL,CAAkBuB,IAAlB,CAAuBR,GAAvB;AACH;AACJ;AACJ,KA/DqB;;AAiEtB;AACAO,uBAAoB,2BAASP,GAAT,EAAa;AAC7B,YAAI,KAAKtB,eAAL,CAAqBuB,MAArB,CAA4BD,GAA5B,EAAiCS,KAAjC,IAA0C,IAA9C,EAAmD;AAC/C,iBAAK3B,cAAL,CAAoB0B,IAApB,CAAyBR,GAAzB,EAD+C,CACY;AAC9D,SAFD,MAGK;AACD,iBAAKd,iBAAL,GADC,CAC0D;AAC9D;AACJ,KAzEqB;;AA2EtB;AACAwB,cAAW,oBAAU;AACjB,aAAKZ,cAAL;AACH,KA9EqB;;AAgFtB;AACAA,oBAAiB,0BAAU;AACvB,YAAIK,KAAKQ,MAAL,CAAYC,UAAhB,EAA4B,KAAKlC,eAAL,CAAqBmC,MAArB,GAA8BV,KAAKC,WAAL,CAAiBU,OAA/C;;AAE5B,YAAIC,eAAe,KAAKnB,MAAL,CAAYoB,KAAZ,EAAnB;AACA,YAAIC,MAAe/C,GAAGgD,IAAH,CAAQC,IAAR,CAAa,KAAKzC,eAAL,CAAqBmC,MAAlC,EAA0CV,KAAKC,WAAL,CAAiBgB,IAA3D,EAAiEL,YAAjE,CAAnB;;AAEA;AACA,YAAIM,WAAW,UAAUC,KAAV,EAAiB;AAC5B;AACA,iBAAKC,UAAL,CAAgBR,YAAhB,EAA8BO,KAA9B;;AAEA;AACA,iBAAKvC,cAAL,CAAoByB,IAApB,CAAyBO,YAAzB;;AAEA;AACA,iBAAK7B,iBAAL;;AAEA,gBAAIiB,KAAKC,WAAL,CAAiBoB,aAArB,EACItD,GAAGwB,GAAH,CAAO,iCAAiCC,MAAjC,CAAwC,KAAKT,iBAA7C,EAAgE,KAAKM,WAArE,EAAkF,KAAKH,kBAAvF,CAAP;;AAEJ;AACA,iBAAKA,kBAAL;;AAEA;AACA,gBAAI,KAAKoC,UAAT,EAAqB;AACjB,qBAAKA,UAAL,CAAgBV,YAAhB,EAA8B,KAAK7B,iBAAL,GAAyB,KAAKM,WAA5D;AACH;;AAED;AACA,iBAAKkC,kBAAL;AACH,SAvBc,CAuBbC,IAvBa,CAuBR,IAvBQ,CAAf;;AAyBA;AACA,YAAIC,QAAQ,UAAUA,KAAV,EAAiB;AACzB,iBAAK5C,YAAL,CAAkBwB,IAAlB,CAAuBO,YAAvB;AACA,iBAAK1B,kBAAL;AACA,iBAAKF,eAAL;;AAEA,gBAAIgB,KAAK0B,SAAL,CAAeC,UAAnB,EAA8B;AAA0B;AACpD,oBAAI,KAAKzC,kBAAL,IAA2B,CAA/B,EAAiC;AAC7B,wBAAI,KAAK0C,WAAT,EAAsB,KAAKA,WAAL;AACzB;AACJ,aAJD,MAKK;AACD7D,mBAAGwB,GAAH,CAAO,iCAAiCC,MAAjC,CAAwCsB,GAAxC,EAA6CW,KAA7C,CAAP;AACA1D,mBAAGwB,GAAH,CAAO,+BAA+BC,MAA/B,CAAsC,KAAKT,iBAA3C,EAA8D,KAAKM,WAAnE,EAAgF,KAAKN,iBAAL,GAAyB,KAAKC,eAA9G,CAAP;;AAEA,qBAAKuC,kBAAL;AACH;AACJ,SAhBW,CAgBVC,IAhBU,CAgBL,IAhBK,CAAZ;;AAkBAxB,aAAK6B,IAAL,CAAUC,gBAAV,CAA2B,KAAKC,QAAL,CAAcjB,GAAd,CAA3B,EAA+CI,QAA/C,EAAyDO,KAAzD;;AAEA;AACA,aAAKvC,kBAAL;AACA,YAAI,KAAKA,kBAAL,GAA0Bc,KAAKC,WAAL,CAAiB+B,UAA/C,EAA0D;AACtD,iBAAKrC,cAAL;AACH;AACJ,KA3IqB;;AA6ItB;AACAsC,2BAAuB,iCAAY;AAC/B;AACA,aAAKjD,eAAL,GAAuB,CAAvB;AACA,aAAKL,cAAL,GAAuB,KAAKE,YAA5B;AACA,aAAKA,YAAL,GAAuB,EAAvB;AACA,aAAKY,MAAL,GAAuB,KAAKd,cAAL,CAAoBe,KAApB,CAA0B,CAA1B,CAAvB;;AAEA,YAAI,KAAKD,MAAL,CAAYH,MAAZ,GAAqB,CAAzB,EAA2B;AACvB,iBAAKK,cAAL;AACH;AACJ,KAxJqB;;AA0JtB;AACA4B,wBAAoB,8BAAY;AAC5B,YAAIW,cAAc,KAAKnD,iBAAL,GAAyB,KAAKC,eAAhD,CAD4B,CACwD;;AAEpF,YAAI,KAAKK,WAAL,IAAoB,KAAKN,iBAA7B,EAAgD;AAAoC;AAChFhB,eAAGwB,GAAH,CAAO,UAAP;;AAEA;AACA,gBAAI,KAAKK,UAAT,EAAqB,KAAKA,UAAL;;AAErB;AACA,iBAAKuC,aAAL;AACH,SARD,MASK,IAAI,KAAK9C,WAAL,IAAoB6C,WAAxB,EAAqC;AAA0C;AAChFnE,eAAGwB,GAAH,CAAO,gBAAP,EAAyB,KAAKF,WAA9B;AACAtB,eAAGwB,GAAH,CAAO,gBAAP,EAAyB,KAAKR,iBAA9B;AACAhB,eAAGwB,GAAH,CAAO,gBAAP,EAAyB,KAAKP,eAA9B;;AAEA;AACA,iBAAKC,UAAL;;AAEA,gBAAI,KAAKA,UAAL,GAAkB,CAAtB,EAAyB;AACrBlB,mBAAGwB,GAAH,CAAO,kBAAkBC,MAAlB,CAAyB,KAAKP,UAA9B,CAAP;;AAEA,qBAAKgD,qBAAL;AACH,aAJD,MAKK;AACDlE,mBAAGwB,GAAH,CAAO,UAAP;;AAEA;AACA,oBAAI,KAAK6C,OAAT,EAAkB,KAAKA,OAAL;AACrB;AACJ,SAnBI,MAoBA,IAAI,KAAK3C,MAAL,CAAYH,MAAZ,GAAqB,CAArB,IAA0B,KAAKJ,kBAAL,GAA0Bc,KAAKC,WAAL,CAAiB+B,UAAzE,EAAqF;AAAO;AAC7F,iBAAKrC,cAAL;AACH;AACJ,KA9LqB;;AAgMtB;AACAwC,mBAAe,yBAAY;AACvB,aAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI,KAAKvD,YAAL,CAAkBQ,MAAtC,EAA8C+C,GAA9C,EAAmD;AAC/C,gBAAIzB,eAAe,KAAK9B,YAAL,CAAkBuD,CAAlB,CAAnB;AACA,gBAAIC,WAAevE,GAAGgD,IAAH,CAAQC,IAAR,CAAa,KAAK3C,YAAlB,EAAgCuC,YAAhC,CAAnB;AACA,gBAAI2B,IAAIC,SAAJ,CAAcC,UAAd,CAAyBH,QAAzB,CAAJ,EAAwC;AACpCvE,mBAAGwB,GAAH,CAAO,sBAAsBC,MAAtB,CAA6B8C,QAA7B,CAAP;AACH,aAFD,MAGK;AACDvE,mBAAGwB,GAAH,CAAO,sBAAsBC,MAAtB,CAA6B8C,QAA7B,CAAP;AACH;AACJ;AACJ,KA5MqB;;AA8MtB;AACAlB,gBAAa,oBAASR,YAAT,EAAuBO,KAAvB,EAA6B;AACtC,YAAIpD,GAAG2E,GAAH,CAAOC,QAAX,EAAoB;AAChB,gBAAIC,iBAAiB7E,GAAGgD,IAAH,CAAQC,IAAR,CAAa,KAAK3C,YAAlB,EAAgCuC,aAAaiC,MAAb,CAAoB,CAApB,EAAuBjC,aAAakC,WAAb,CAAyB,GAAzB,CAAvB,CAAhC,CAArB;AACA,gBAAIC,YAAiBhF,GAAGgD,IAAH,CAAQC,IAAR,CAAa,KAAK3C,YAAlB,EAAgCuC,YAAhC,CAArB;;AAEA;AACA,gBAAI2B,IAAIC,SAAJ,CAAcQ,gBAAd,CAA+BJ,cAA/B,KAAkD,KAAtD,EAA6D;AACzDL,oBAAIC,SAAJ,CAAcS,eAAd,CAA8BL,cAA9B;AACH;;AAED;AACAL,gBAAIC,SAAJ,CAAcU,eAAd,CAA8B,IAAIC,UAAJ,CAAehC,KAAf,CAA9B,EAAqD4B,SAArD;AACH;AACJ,KA5NqB;;AA8NtB;AACAhB,cAAU,kBAAUjB,GAAV,EAAe;AACrB,eAAOA,MAAM,KAAN,GAAc,KAAKtC,QAA1B;AACH;AAjOqB,CAAT,CAAjB",
  "file": "unknown",
  "sourcesContent": [
    "/** \r\n * 队列加载资源\r\n * Author      : donggang\r\n * Create Time : 2016.12.15\r\n * \r\n * 事件：\r\n * this.onProgress      更新进度\r\n * this.onNoNetwork     断网\r\n * this.onComplete      更新完成\r\n */\r\n\r\nmodule.exports = cc.Class({\r\n    /** 分析并获取需要更新的资源 */\r\n    download: function (storagePath, localManifest, remoteManifest) {\r\n        this._storagePath       = storagePath;\r\n        this._localManifest     = localManifest; \r\n        this._remoteManifest    = remoteManifest;\r\n\r\n        this._nocache           = (new Date()).getTime();\r\n\r\n        this._downloadUnits     = [];        // 下载文件对象集合\r\n        this._completeUnits     = [];        // 已下载完成对象集合\r\n        this._failedUnits       = [];        // 下载失败文件对象集合\r\n        this._deleteUnits       = [];        // 需要删除文件对象集合\r\n\r\n        this._downloadComplete  = 0;         // 下载完成的文件数量\r\n        this._downloadFailed    = 0;         // 下载失败的文件数量\r\n        this._failCount         = 0;         // 下载失败的次数\r\n        this._concurrentCurrent = 0;         // 并发数量当前值\r\n\r\n        this._analysisDownloadUnits();\r\n        this._analysisDeleteUnits();\r\n\r\n        // 当前总更新单位数量 = 更新完成文件数量 + 待更新文件数量\r\n        this._totalUnits = this._downloadComplete + this._downloadUnits.length;\r\n\r\n        cc.log(\"【更新】共有{0}个文件需要更新\".format(this._downloadUnits.length));\r\n        cc.log(\"【更新】共有{0}个文件需要删除\".format(this._deleteUnits.length));\r\n\r\n        this._items = this._downloadUnits.slice(0);\r\n\r\n        if (this._items.length > 0){\r\n            this._downloadAsset();\r\n        }\r\n        else{\r\n            cc.log(\"【更新】无更新文件，更新完成\");\r\n            if (this.onComplete) this.onComplete(); \r\n        }\r\n    },\r\n\r\n    /** 对比本地项目清单数据和服务器清单数据，找出本地缺少的以及和服务器不一样的资源 */\r\n    _analysisDownloadUnits : function(){\r\n        for (var key in this._remoteManifest.assets) {\r\n            if (this._localManifest.assets.hasOwnProperty(key)) {\r\n                if (game.AssetConfig.debugRes || this._remoteManifest.assets[key].md5 != this._localManifest.assets[key].md5) {\r\n                    // cc.log(\"【更新】准备下载更新的资源 {0}\".format(key));\r\n                    this._addDownloadUnits(key); \r\n                }\r\n            } \r\n            else {\r\n                // cc.log(\"【更新】准备下载本是不存在的资源 {0}\".format(key));\r\n                this._addDownloadUnits(key);\r\n            }\r\n        }\r\n    },\r\n\r\n    /** 对比本地项目清单数据和服务器清单数据，找出本地多出的资源 */\r\n    _analysisDeleteUnits : function(){\r\n         for (var key in this._localManifest.assets) {\r\n            if (this._remoteManifest.assets.hasOwnProperty(key) == false) {\r\n                // cc.log(\"【更新】准备删除的资源{0}\".format(key)); \r\n                this._deleteUnits.push(key);\r\n            }\r\n        }\r\n    },\r\n\r\n    /** 添加下载单位 */\r\n    _addDownloadUnits : function(key){\r\n        if (this._remoteManifest.assets[key].state != true){\r\n            this._downloadUnits.push(key);                             // 远程版本的文件 MD5 值和本地不同时文件需要下载\r\n        }\r\n        else {\r\n            this._downloadComplete++;                                  // 恢复状态时的下载完成数量\r\n        }\r\n    },\r\n\r\n    /** 断网后恢复更新状态 */\r\n    recovery : function(){\r\n        this._downloadAsset();\r\n    },\r\n\r\n    /** 下载资源 */\r\n    _downloadAsset : function(){\r\n        if (game.config.textUpdate) this._remoteManifest.server = game.AssetConfig.testCdn;\r\n\r\n        var relativePath = this._items.shift();\r\n        var url          = cc.path.join(this._remoteManifest.server, game.AssetConfig.line, relativePath); \r\n        \r\n        // 下载成功\r\n        var complete = function (asset) {\r\n            // 文件保存到本地\r\n            this._saveAsset(relativePath, asset);\r\n\r\n            // 记录更新完成的文件\r\n            this._completeUnits.push(relativePath);\r\n\r\n            // 下载完成的文件数量加 1\r\n            this._downloadComplete++;\r\n\r\n            if (game.AssetConfig.debugProgress)\r\n                cc.log(\"【更新】进度 {0}/{1}，当前有 {2} 个资源并行下载\".format(this._downloadComplete, this._totalUnits, this._concurrentCurrent)); \r\n\r\n            // 还原并发数量\r\n            this._concurrentCurrent--;\r\n                        \r\n            // 更新进度事件\r\n            if (this.onProgress) {\r\n                this.onProgress(relativePath, this._downloadComplete / this._totalUnits);\r\n            }\r\n\r\n            // 判断是否下载完成\r\n            this._isUpdateCompleted();  \r\n        }.bind(this);\r\n\r\n        // 下载失败\r\n        var error = function (error) {\r\n            this._failedUnits.push(relativePath);\r\n            this._concurrentCurrent--;\r\n            this._downloadFailed++;\r\n\r\n            if (game.HttpEvent.NO_NETWORK){                         // 触发断网事件\r\n                if (this._concurrentCurrent == 0){\r\n                    if (this.onNoNetwork) this.onNoNetwork();\r\n                }\r\n            }\r\n            else {\r\n                cc.log(\"【更新】下载远程路径为 {0} 的文件失败，错误码为 {1}\".format(url, error));\r\n                cc.log(\"【更新】进度 {0}/{1}, 总处理文件数据为 {2}\".format(this._downloadComplete, this._totalUnits, this._downloadComplete + this._downloadFailed));\r\n\r\n                this._isUpdateCompleted();\r\n            }\r\n        }.bind(this);        \r\n        \r\n        game.http.getByArraybuffer(this._noCache(url), complete, error);\r\n\r\n        // 开启一个并行下载队列\r\n        this._concurrentCurrent++;\r\n        if (this._concurrentCurrent < game.AssetConfig.concurrent){\r\n            this._downloadAsset();\r\n        }\r\n    },\r\n\r\n    /** 下载失败的资源 */\r\n    _downloadFailedAssets: function () {\r\n        // 下载失败的文件数量重置\r\n        this._downloadFailed = 0;\r\n        this._downloadUnits  = this._failedUnits;\r\n        this._failedUnits    = [];\r\n        this._items          = this._downloadUnits.slice(0);\r\n\r\n        if (this._items.length > 0){\r\n            this._downloadAsset();\r\n        }\r\n    },\r\n\r\n    /** 判断是否全部更新完成 */\r\n    _isUpdateCompleted: function () {\r\n        var handleCount = this._downloadComplete + this._downloadFailed;                    // 处理完成数量\r\n        \r\n        if (this._totalUnits == this._downloadComplete) {                                   // 全下载完成\r\n            cc.log(\"【更新】更新完成\");\r\n\r\n            // 触发热更完成事件\r\n            if (this.onComplete) this.onComplete();\r\n\r\n            // 删除本地比服务器多出的文件\r\n            this._deleteAssets();\r\n        }\r\n        else if (this._totalUnits == handleCount) {                                         // 全处理完成，有下载失败的文件，需要重试\r\n            cc.log(\"【更新】下载文件总数量　　：\", this._totalUnits);\r\n            cc.log(\"【更新】下载成功的文件数量：\", this._downloadComplete);\r\n            cc.log(\"【更新】下载失败的文件数量：\", this._downloadFailed);\r\n\r\n            // 更新失败的次数加 1\r\n            this._failCount++;\r\n\r\n            if (this._failCount < 3) { \r\n                cc.log(\"【更新】更新重试第 {0} 次\".format(this._failCount));\r\n\r\n                this._downloadFailedAssets();\r\n            }\r\n            else {\r\n                cc.log(\"【更新】更新失败\");\r\n\r\n                // 触发热更失败事件\r\n                if (this.onFaild) this.onFaild();\r\n            }\r\n        }\r\n        else if (this._items.length > 0 && this._concurrentCurrent < game.AssetConfig.concurrent) {      // 队列下载\r\n            this._downloadAsset();    \r\n        }\r\n    },\r\n\r\n    /** 删除本地比服务器多出的文件 */\r\n    _deleteAssets: function () {\r\n        for (var i = 0; i < this._deleteUnits.length; i++) {\r\n            var relativePath = this._deleteUnits[i];\r\n            var filePath     = cc.path.join(this._storagePath, relativePath);\r\n            if (jsb.fileUtils.removeFile(filePath)) {\r\n                cc.log(\"【更新】版本多余资源 {0} 删除成功\".format(filePath));\r\n            } \r\n            else {\r\n                cc.log(\"【更新】版本多余资源 {0} 删除失败\".format(filePath));\r\n            };\r\n        }\r\n    },\r\n\r\n    /** 文件保存到本地 */\r\n    _saveAsset : function(relativePath, asset){\r\n        if (cc.sys.isNative){\r\n            var storeDirectory = cc.path.join(this._storagePath, relativePath.substr(0, relativePath.lastIndexOf(\"/\")));\r\n            var storePath      = cc.path.join(this._storagePath, relativePath);\r\n\r\n            // 存储目录\r\n            if (jsb.fileUtils.isDirectoryExist(storeDirectory) == false) {\r\n                jsb.fileUtils.createDirectory(storeDirectory);\r\n            }\r\n\r\n            // 存储文件\r\n            jsb.fileUtils.writeDataToFile(new Uint8Array(asset), storePath);\r\n        }\r\n    },\r\n\r\n    /** 规避 HTTP 缓存问题 */\r\n    _noCache: function (url) {\r\n        return url + \"?t=\" + this._nocache;\r\n    }\r\n})"
  ]
}