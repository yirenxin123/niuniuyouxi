{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BasePop",
    "require",
    "MusicMgr",
    "Audio_Common",
    "GameSystem",
    "cc",
    "Class",
    "extends",
    "properties",
    "CommitLayout",
    "default",
    "type",
    "Layout",
    "HistoryLayout",
    "ServiceOnlineLayout",
    "onLoad",
    "log",
    "node",
    "on",
    "Node",
    "EventType",
    "TOUCH_START",
    "event",
    "stopPropagation",
    "bind",
    "scaleTo",
    "bg",
    "callbackBtnClose",
    "playEffect",
    "AUDIO_BTN_CLICK",
    "dismiss",
    "callbackBtnLabel",
    "toggle",
    "customEventData",
    "switchLayout",
    "setVisible",
    "opacity"
  ],
  "mappings": ";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,eAAeF,QAAQ,cAAR,CAAnB;AACA,IAAIG,aAAaH,QAAQ,YAAR,CAAjB;;AAEAI,GAAGC,KAAH,CAAS;AACLC,aAASP,OADJ;;AAGLQ,gBAAY;AACRC,sBAAe;AACXC,qBAAU,IADC;AAEXC,kBAAON,GAAGO;AAFC,SADP;AAKRC,uBAAgB;AACZH,qBAAU,IADE;AAEZC,kBAAON,GAAGO;AAFE,SALR;AASRE,6BAAsB;AAClBJ,qBAAU,IADQ;AAElBC,kBAAON,GAAGO;AAFQ;AATd,KAHP;;AAkBL;AACAG,YAAQ,kBAAY;AAChBV,WAAGW,GAAH,CAAO,sBAAP;AACA,aAAKC,IAAL,CAAUC,EAAV,CAAab,GAAGc,IAAH,CAAQC,SAAR,CAAkBC,WAA/B,EAA4C,UAASC,KAAT,EAAe;AACvDjB,eAAGW,GAAH,CAAO,YAAP;AACAM,kBAAMC,eAAN;AACH,SAH2C,CAG1CC,IAH0C,CAGrC,IAHqC,CAA5C;;AAKA,aAAKC,OAAL,CAAa,KAAKC,EAAlB;AACH,KA3BI;;AA6BL;AACA;;AAEA;;AAEAC,sBAAmB,4BAAU;AACzBtB,WAAGW,GAAH,CAAO,gCAAP;AACAd,iBAAS0B,UAAT,CAAoBzB,aAAa0B,eAAjC;AACA,aAAKC,OAAL;AACH,KAtCI;;AAwCLC,sBAAmB,0BAASC,MAAT,EAAgBC,eAAhB,EACnB;AACI5B,WAAGW,GAAH,CAAO,sDAAsDiB,eAA7D;AACA/B,iBAAS0B,UAAT,CAAoBzB,aAAa0B,eAAjC;AACA,aAAKK,YAAL,CAAkBD,eAAlB;AACH,KA7CI;;AA+CLC,kBAAe,sBAASvB,IAAT,EACf;AACI,YAAGA,SAAS,CAAZ,EACA;AACI,iBAAKF,YAAL,CAAkBQ,IAAlB,CAAuBkB,UAAvB,CAAkC,IAAlC;AACA;AACA,iBAAKtB,aAAL,CAAmBI,IAAnB,CAAwBmB,OAAxB,GAAkC,CAAlC;AACA,iBAAKtB,mBAAL,CAAyBG,IAAzB,CAA8BmB,OAA9B,GAAwC,CAAxC;AACH,SAND,MAOK,IAAGzB,SAAS,CAAZ,EACL;AACI,iBAAKF,YAAL,CAAkBQ,IAAlB,CAAuBkB,UAAvB,CAAkC,KAAlC;AACA;AACA,iBAAKtB,aAAL,CAAmBI,IAAnB,CAAwBmB,OAAxB,GAAkC,GAAlC;AACA,iBAAKtB,mBAAL,CAAyBG,IAAzB,CAA8BmB,OAA9B,GAAwC,CAAxC;AACH,SANI,MAQL;AACI,iBAAK3B,YAAL,CAAkBQ,IAAlB,CAAuBmB,OAAvB,GAAiC,CAAjC;AACA,iBAAKvB,aAAL,CAAmBI,IAAnB,CAAwBmB,OAAxB,GAAkC,CAAlC;AACA,iBAAKtB,mBAAL,CAAyBG,IAAzB,CAA8BmB,OAA9B,GAAwC,GAAxC;AACH;AACJ;AArEI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "var BasePop = require(\"BasePop\");\r\nvar MusicMgr = require(\"MusicMgr\");\r\nvar Audio_Common = require(\"Audio_Common\");\r\nvar GameSystem = require(\"GameSystem\");\r\n\r\ncc.Class({\r\n    extends: BasePop,\r\n\r\n    properties: {\r\n        CommitLayout : {\r\n            default : null,\r\n            type : cc.Layout\r\n        },\r\n        HistoryLayout : {\r\n            default : null,\r\n            type : cc.Layout\r\n        },\r\n        ServiceOnlineLayout : {\r\n            default : null,\r\n            type : cc.Layout\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        cc.log('ServiceView : onLoad');\r\n        this.node.on(cc.Node.EventType.TOUCH_START, function(event){\r\n            cc.log(\"stop event\");\r\n            event.stopPropagation();\r\n        }.bind(this));\r\n        \r\n        this.scaleTo(this.bg);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n    \r\n    callbackBtnClose : function(){\r\n        cc.log(\"ServiceView : callbackBtnClose\");\r\n        MusicMgr.playEffect(Audio_Common.AUDIO_BTN_CLICK);\r\n        this.dismiss();\r\n    },\r\n    \r\n    callbackBtnLabel : function(toggle,customEventData)\r\n    {\r\n        cc.log(\"ServiceView : callbackBtnLabel,customEventData = \" + customEventData);\r\n        MusicMgr.playEffect(Audio_Common.AUDIO_BTN_CLICK);\r\n        this.switchLayout(customEventData);\r\n    },\r\n    \r\n    switchLayout : function(type)\r\n    {\r\n        if(type === 1)\r\n        {\r\n            this.CommitLayout.node.setVisible(true);\r\n            //this.CommitLayout.node.opacity = 255;\r\n            this.HistoryLayout.node.opacity = 0;\r\n            this.ServiceOnlineLayout.node.opacity = 0;\r\n        }\r\n        else if(type === 2)\r\n        {\r\n            this.CommitLayout.node.setVisible(false);\r\n            //this.CommitLayout.node.opacity = 0;\r\n            this.HistoryLayout.node.opacity = 255;\r\n            this.ServiceOnlineLayout.node.opacity = 0;\r\n        }\r\n        else\r\n        {\r\n            this.CommitLayout.node.opacity = 0;\r\n            this.HistoryLayout.node.opacity = 0;\r\n            this.ServiceOnlineLayout.node.opacity = 255;\r\n        }\r\n    },\r\n});\r\n"
  ]
}