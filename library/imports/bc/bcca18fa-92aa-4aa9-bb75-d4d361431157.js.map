{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "GameSystem",
    "require",
    "SocketData",
    "MessageFactory",
    "GameWebSocket",
    "m_socket",
    "isSocketConnected",
    "socketListenerID",
    "netConnected",
    "onListenMessageToSend",
    "onNetCheckListener",
    "prototype",
    "startSocket",
    "url",
    "cc",
    "log",
    "getInstance",
    "webSocketUrl",
    "connectSocket",
    "reStartSocket",
    "self",
    "GlobalEventManager",
    "addEventListener",
    "window",
    "SOCKETT_SENDMESSAGE",
    "event",
    "sendMessage",
    "GameEngineInfo",
    "tag",
    "GameInfo",
    "NetOnline",
    "NetOffline",
    "aesKey",
    "AES",
    "utils",
    "utf8",
    "toBytes",
    "defaultKey",
    "WebSocket",
    "binaryType",
    "onopen",
    "emitEvent",
    "SocketMessage",
    "MessageType",
    "SOCKET_CONNECTED",
    "onerror",
    "warn",
    "MSG_NETWORK_FAILURE",
    "onclose",
    "SOCKET_DISCONNECTED",
    "onmessage",
    "decStr",
    "AesDecode",
    "data",
    "packet",
    "JSON",
    "parse",
    "cmd",
    "message",
    "createMessageResp",
    "undefined",
    "onMessage",
    "SOCKET_MESSAGE",
    "disconnect",
    "isConnected",
    "close",
    "readyState",
    "OPEN",
    "toString",
    "str",
    "stringify",
    "enc",
    "AesEncode",
    "send",
    "textBytes",
    "aesOfb",
    "ModeOfOperation",
    "ofb",
    "iv",
    "encryptedBytes",
    "encrypt",
    "text",
    "Uint8Array",
    "byteLength",
    "desc",
    "decrypt",
    "fromBytes",
    "base64String",
    "BASE64",
    "encoder",
    "SocketManager",
    "instance",
    "module",
    "exports"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "/**\r\n * Created by shrimp on 17/2/19.\r\n */\r\nvar GameSystem  = require('GameSystem');\r\nvar SocketData  = require('SocketData') ;\r\nvar MessageFactory = require('MessageFactory');\r\n\r\nfunction GameWebSocket(){\r\n    this.m_socket = null;\r\n    this.isSocketConnected = false;\r\n    this.socketListenerID = -1;\r\n    this.netConnected = true;\r\n    this.onListenMessageToSend();\r\n    this.onNetCheckListener();\r\n}\r\n\r\n//连接socket\r\nGameWebSocket.prototype.startSocket = function(url)\r\n{\r\n    cc.log(\"SocketManager.startSocket,url = \" + GameSystem.getInstance().webSocketUrl);\r\n    this.isSocketConnected = false ;\r\n    this.connectSocket(GameSystem.getInstance().webSocketUrl) ;\r\n},\r\n\r\n//重连服务器\r\nGameWebSocket.prototype.reStartSocket = function(){\r\n    cc.log(\"SocketManager.reStartSocket,url = \" + GameSystem.getInstance().webSocketUrl);\r\n    this.isSocketConnected = false ;\r\n    this.connectSocket(GameSystem.getInstance().webSocketUrl) ;\r\n},\r\n\r\n//等待玩家发送数据\r\nGameWebSocket.prototype.onListenMessageToSend = function(){\r\n    cc.log(\"SocketManager.onListenMessageToSend\");\r\n    if (this.socketListenerID == -1){\r\n        var self = this;\r\n\r\n        this.socketListenerID = GlobalEventManager.getInstance().addEventListener(window.SOCKETT_SENDMESSAGE,\r\n            function ( event) {\r\n                cc.log(\"SocketManager.onListenMessageToSend event listener.\");\r\n                if(event){\r\n                    self.sendMessage(event);\r\n                }\r\n            }, this);\r\n    }\r\n};\r\n\r\nGameWebSocket.prototype.onNetCheckListener = function () {\r\n    cc.log(\"SocketManager.onNetCheckListener\" );\r\n    var self = this ;\r\n\r\n    GlobalEventManager.getInstance().addEventListener(window.GameEngineInfo,\r\n        function (event) {\r\n\r\n            if(event){\r\n                var tag = event.tag ;\r\n\r\n                if(tag == window.GameInfo.NetOnline){\r\n                    self.netConnected = true ;\r\n                }\r\n                else if(tag == window.GameInfo.NetOffline){\r\n                    self.netConnected = false ;\r\n                }\r\n            }\r\n\r\n        },this);\r\n}\r\n\r\n\r\n//建立链接\r\nGameWebSocket.prototype.connectSocket = function(url){\r\n    cc.log(\"SocketManager.connectSocket, url = \" + url );\r\n    var self = this;\r\n\r\n    GameSystem.getInstance().aesKey = AES.utils.utf8.toBytes(GameSystem.getInstance().defaultKey);\r\n    this.m_socket = new WebSocket(url) ;\r\n    this.m_socket.binaryType = \"arraybuffer\";\r\n\r\n    //建立链接\r\n    this.m_socket.onopen = function(event){\r\n        self.isSocketConnected = true ;\r\n        cc.log(\"SocketManager.connectSocket,socket connected\");\r\n        GlobalEventManager.getInstance().emitEvent(window.SocketMessage,{tag:window.MessageType.SOCKET_CONNECTED,}) ;\r\n\r\n    };\r\n\r\n    //失败 断开链接\r\n    this.m_socket.onerror = function(event){\r\n        self.isSocketConnected = false ;\r\n        cc.warn(\"SocketManager.connectSocket,socket error\");\r\n        GlobalEventManager.getInstance().emitEvent(window.SocketMessage,{tag:window.MessageType.MSG_NETWORK_FAILURE,}) ;\r\n\r\n    };\r\n\r\n    //链接断开\r\n    this.m_socket.onclose = function(event) {\r\n        self.isSocketConnected = false ;\r\n        cc.warn(\"SocketManager.connectSocket,socket disconnect\");\r\n        GlobalEventManager.getInstance().emitEvent(window.SocketMessage,{tag:window.MessageType.SOCKET_DISCONNECTED,}) ;\r\n\r\n    };\r\n\r\n    //接收服务器到消息\r\n    this.m_socket.onmessage = function(event){\r\n\r\n        var decStr = AesDecode(event.data);\r\n        cc.log(\"SocketManager.connectSocket ,socket rec message, data = \",decStr);\r\n        var packet = JSON.parse(decStr);\r\n\r\n        var cmd = packet.cmd;\r\n\r\n        var message = MessageFactory.createMessageResp(cmd);\r\n\r\n        if(message == undefined){\r\n            cc.warn(\"SocketManager.connectSocket , message = undefined\");\r\n            return ;\r\n        }\r\n        //解析数据\r\n        message.onMessage(packet);\r\n        // //通知 有新消息到\r\n        GlobalEventManager.getInstance().emitEvent(window.SocketMessage,{tag:window.MessageType.SOCKET_MESSAGE,data:message}) ;\r\n    };\r\n};\r\n\r\n//关闭链接\r\nGameWebSocket.prototype.disconnect = function(){\r\n    cc.log(\"SocketManager.connectSocket \");\r\n    //检测是有连接\r\n    if(this.m_socket && this.isConnected() && this.netConnected){\r\n        this.m_socket.close() ;\r\n        this.m_socket = null ;\r\n        this.isSocketConnected = false ;\r\n    }\r\n};\r\n\r\n\r\n//发送消息\r\nGameWebSocket.prototype.sendMessage = function(data){\r\n    cc.log(\"SocketManager.sendMessage \");\r\n    if(!this.netConnected){\r\n        // ToastView.show(\"请检查网络\") ;\r\n        cc.warn(\"ocketManager.sendMessage,网络尚未连接 socket发送失败\");\r\n        return ;\r\n    }\r\n\r\n    if(!this.isSocketConnected ){\r\n        cc.warn(\"ocketManager.sendMessage,socket 尚未连接上\");\r\n        //ToastView.show(\"服务器连接失败\") ;\r\n        return ;\r\n    }\r\n\r\n    if(this.m_socket == null){\r\n        cc.warn(\"ocketManager.sendMessage,没有创建socket\");\r\n        return ;\r\n    }\r\n\r\n    if (this.m_socket.readyState === WebSocket.OPEN)\r\n    {\r\n        cc.log(\"SocketManager.sendMessage,cmd == 0x0%s\", data.data.cmd.toString(16));\r\n        var str = JSON.stringify(data.data);\r\n        cc.log(\"SocketManager.sendMessage,str = %s\", str.toString());\r\n        var enc = AesEncode(str)\r\n         this.m_socket.send(enc);\r\n    }\r\n    else\r\n    {\r\n        //ToastView.show(\"服务器连接失败\") ;\r\n        cc.warn(\"ocketManager.sendMessage,socket 状态关闭\");\r\n    }\r\n};\r\n\r\nfunction AesEncode(str) {\r\n    var textBytes = AES.utils.utf8.toBytes(str);\r\n    var aesOfb = new AES.ModeOfOperation.ofb(GameSystem.getInstance().aesKey, GameSystem.getInstance().iv);\r\n    var encryptedBytes = aesOfb.encrypt(textBytes);\r\n    return encryptedBytes;\r\n}\r\n\r\nfunction AesDecode(data) {\r\n    // cc.log(\"AesDecode,aesKey = \" + Array.from(GameSystem.getInstance().aesKey) + \",iv = \" + GameSystem.getInstance().iv);\r\n    var aesOfb = new AES.ModeOfOperation.ofb(GameSystem.getInstance().aesKey, GameSystem.getInstance().iv);\r\n    // cc.log(\"AesDecode,data = \" + data);\r\n    // cc.log(\"AesDecode,bufferLength = \" + data.byteLength);\r\n    var text = new Uint8Array(data, 0, data.byteLength);\r\n    // cc.log(\"AesDecode,text = \" + text);\r\n    var desc = aesOfb.decrypt(text);\r\n    // cc.log(\"AesDecode,desc = \" + desc);\r\n    var str  = AES.utils.utf8.fromBytes(desc);\r\n    // cc.log(\"AesDecode,str = \" + str);\r\n    return str;\r\n}\r\n\r\n\r\n//是否连接\r\nGameWebSocket.prototype.isConnected = function(){\r\n    return this.isSocketConnected ;\r\n};\r\n\r\n\r\nGameWebSocket.prototype.base64String = function (data) {\r\n    return BASE64.encoder(data);\r\n};\r\n\r\nvar SocketManager = (function(){\r\n    var instance ;\r\n    function getInstance(){\r\n        if(instance === undefined){\r\n            instance = new GameWebSocket();\r\n        }\r\n        return instance ;\r\n    }\r\n\r\n    return{\r\n        getInstance : getInstance,\r\n    };\r\n})();\r\n\r\nmodule.exports = SocketManager;"
  ]
}