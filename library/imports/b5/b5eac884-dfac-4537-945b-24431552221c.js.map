{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "Bullfight_PlayerCell",
    "require",
    "BasePop",
    "GamePlayer",
    "MusicMgr",
    "Audio_Common",
    "UtilTool",
    "GameSystem",
    "cc",
    "Class",
    "extends",
    "properties",
    "LabelTitle",
    "Label",
    "LabelCoin",
    "LabelRoundnum",
    "LabelwinMax",
    "LabelallCarry",
    "scrollView",
    "ScrollView",
    "PlayerCell",
    "Prefab",
    "Head",
    "Sprite",
    "BtnShare",
    "Node",
    "onLoad",
    "initBaseData",
    "getInstance",
    "VerStatus",
    "VerStatusType",
    "VERSION_TYPE_AUDIT",
    "active",
    "coin",
    "roundnum",
    "winMax",
    "allCarry",
    "roomId",
    "ShareImagePath",
    "Canvas",
    "callBackBtnClose",
    "dismiss",
    "playEffect",
    "AUDIO_BTN_CLICK",
    "director",
    "loadScene",
    "callBackBtnShare",
    "message",
    "popView",
    "btn",
    "GlobalEventManager",
    "emitEvent",
    "window",
    "SocketMessage",
    "tag",
    "MessageType",
    "SCENE_MSG",
    "data",
    "setGameData",
    "msg",
    "canvas",
    "string",
    "privateid",
    "scores",
    "Scores",
    "cellheight",
    "index",
    "length",
    "item",
    "instantiate",
    "setPosition",
    "p",
    "getContentSize",
    "height",
    "content",
    "addChild",
    "uid",
    "wincoin",
    "playnum",
    "maxwin",
    "totalcarry",
    "getComponent",
    "updatePlayerScoreCell",
    "name",
    "updateMySelfInfo",
    "winCoin",
    "Number",
    "node",
    "color",
    "Color",
    "RED",
    "GREEN",
    "UpdateWXHeadIcon",
    "headurl"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Bullfight_PlayerCell = require('Bullfight_PlayerCell');\r\nvar BasePop = require('BasePop');\r\nvar GamePlayer = require('GamePlayer');\r\nvar MusicMgr = require('MusicMgr');\r\nvar Audio_Common = require('Audio_Common');\r\nvar UtilTool = require('UtilTool');\r\nvar GameSystem   = require('GameSystem');\r\n\r\ncc.Class({\r\n    extends: BasePop,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        LabelTitle: cc.Label,\r\n        LabelCoin : cc.Label,\r\n        LabelRoundnum : cc.Label,\r\n        LabelwinMax : cc.Label,\r\n        LabelallCarry : cc.Label,\r\n        scrollView : cc.ScrollView,\r\n        PlayerCell : cc.Prefab,\r\n        Head : cc.Sprite,\r\n        BtnShare : cc.Node,\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.initBaseData();\r\n        //this.setGameData();\r\n        if(GameSystem.getInstance().VerStatus == GameSystem.getInstance().VerStatusType.VERSION_TYPE_AUDIT)\r\n        {\r\n            this.BtnShare.active = false;\r\n        }\r\n    },\r\n    \r\n    initBaseData : function () {\r\n        this.coin = 0;\r\n        this.roundnum = 0;\r\n        this.winMax = 0;\r\n        this.allCarry = 0;\r\n        this.roomId = 0;\r\n        this.ShareImagePath = \"\";\r\n        this.Canvas = null;\r\n    },\r\n    \r\n    \r\n    callBackBtnClose : function () {\r\n        this.dismiss();\r\n        MusicMgr.playEffect(Audio_Common.AUDIO_BTN_CLICK);\r\n        cc.director.loadScene('HallScene');\r\n    },\r\n\r\n    callBackBtnShare : function () {\r\n        var message = {\r\n            popView : \"Bullfight_TotalResult\",\r\n            btn : \"BtnShare\"\r\n        };\r\n        GlobalEventManager.getInstance().emitEvent(window.SocketMessage,\r\n            {tag:window.MessageType.SCENE_MSG,data:message}) ;\r\n\r\n        // var self = this;\r\n        // this.ShareImagePath = UtilTool.captureScreen(\"TotalResult.png\",this.Canvas,function(filePath){\r\n        //     var shareView = cc.instantiate(self.ShareView);\r\n        //     self.node.addChild(shareView);\r\n        //     shareView.setPosition(cc.p(0,0));\r\n        //     var string = \"游戏结算分享\";\r\n        //     shareView.getComponent(\"ShareView\").setShareTyep(ShareType.E_SHARETYPE_IMAGE,filePath,\"www.baidu.com\");\r\n        // });\r\n    },\r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n\r\n    /**\r\n     *  Uid        int32 `json:\"uid\"`\r\n     Coin       int64 `json:\"coin\"`\r\n     PlayNum    int   `json:\"playnum\"`\r\n     MaxWin     int   `json:\"maxwin\"`\r\n     TotalCarry int64 `json:\"totalcarry\"`\r\n     * */\r\n    setGameData : function (msg, canvas) {\r\n        this.Canvas = canvas;\r\n\r\n        this.LabelTitle.string = \"总结算(\" + msg.privateid + \")\";\r\n        var scores = msg.Scores;\r\n        var cellheight = 0;\r\n        for (var index = 0;index < scores.length;index++)\r\n        {\r\n            var item = cc.instantiate(this.PlayerCell);\r\n            item.setPosition(cc.p(0,-index*item.getContentSize().height - item.getContentSize().height/2));\r\n            this.scrollView.content.addChild(item);\r\n\r\n            if (scores[index].uid == GamePlayer.getInstance().uid)\r\n            {\r\n                this.coin     = scores[index].wincoin;\r\n                this.roundnum = scores[index].playnum;\r\n                this.winMax   = scores[index].maxwin;\r\n                this.allCarry = scores[index].totalcarry;\r\n            }\r\n\r\n            cellheight = item.getContentSize().height;\r\n            item.getComponent(\"Bullfight_TotalResultCell\").updatePlayerScoreCell(scores[index].name,\r\n                scores[index].totalcarry, scores[index].wincoin, 50);\r\n        }\r\n\r\n        if(scores.length*cellheight > this.scrollView.content.height)\r\n        {\r\n            this.scrollView.content.height = scores.length*cellheight;\r\n        }\r\n        this.updateMySelfInfo();\r\n\r\n        //this.node.runAction(cc.sequence(cc.delayTime(1.0),cc.callFunc(this.ShootScreen,this)));\r\n\r\n    },\r\n\r\n    updateMySelfInfo : function () {\r\n        var winCoin = Number(this.coin);\r\n        if (winCoin > 0)\r\n        {\r\n            this.LabelCoin.string  = \"+\" + winCoin;\r\n            this.LabelCoin.node.color = cc.Color.RED;\r\n        }\r\n        else if (winCoin == 0) {\r\n            this.LabelCoin.string     = winCoin;\r\n            this.LabelCoin.node.color = new cc.Color(204, 160, 41, 255);\r\n        }\r\n        else\r\n        {\r\n            this.LabelCoin.string     = winCoin;\r\n            this.LabelCoin.node.color = cc.Color.GREEN;\r\n        }\r\n        this.LabelRoundnum.string = this.roundnum;\r\n        this.LabelwinMax.string = this.winMax;\r\n        this.LabelallCarry.string = this.allCarry;\r\n        UpdateWXHeadIcon(GamePlayer.getInstance().headurl,this.Head);\r\n    },\r\n});\r\n"
  ]
}