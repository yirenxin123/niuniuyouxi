{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "lableMsg",
    "Label",
    "onLoad",
    "GameInfoListenerID",
    "socketMessageListenerID",
    "node",
    "opacity",
    "tipsCount",
    "isNetConnecting",
    "baseTips",
    "onNetCheckListener",
    "addSocketListener",
    "onDestroy",
    "GlobalEventManager",
    "getInstance",
    "removeListener",
    "self",
    "addEventListener",
    "window",
    "GameEngineInfo",
    "event",
    "tag",
    "GameInfo",
    "NetOnline",
    "unschedule",
    "updateTipShow",
    "NetOffline",
    "string",
    "schedule",
    "SocketMessage",
    "undefined",
    "type",
    "MessageType",
    "SOCKET_CONNECTED",
    "onSocketConnected",
    "SOCKET_DISCONNECTED",
    "onSocketDisconnected",
    "SOCKET_CONNECTING",
    "MSG_NETWORK_FAILURE",
    "SOCKET_MESSAGE",
    "tips",
    "index",
    "i"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        lableMsg : cc.Label,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.GameInfoListenerID = -1 ;\r\n        this.socketMessageListenerID = -1 ;\r\n        this.node.opacity = 0 ;\r\n        this.tipsCount = 0 ;\r\n\r\n        this.isNetConnecting = true ;\r\n\r\n        this.baseTips = \"\" ;\r\n\r\n        this.onNetCheckListener() ;\r\n        this.addSocketListener() ;\r\n    },\r\n\r\n    onDestroy : function () {\r\n        GlobalEventManager.getInstance().removeListener(this.GameInfoListenerID);\r\n        GlobalEventManager.getInstance().removeListener(this.socketMessageListenerID);\r\n    },\r\n\r\n    onNetCheckListener : function () {\r\n    var self = this ;\r\n    this.GameInfoListenerID = GlobalEventManager.getInstance().addEventListener(window.GameEngineInfo,\r\n        function (event) {\r\n            if(event){\r\n                var tag = event.tag ;\r\n                if(tag == window.GameInfo.NetOnline){\r\n                    self.isNetConnecting = true ;\r\n                    self.node.opacity = 0 ;\r\n                    self.unschedule(self.updateTipShow);\r\n\r\n                }\r\n                else if(tag == window.GameInfo.NetOffline){\r\n                    self.isNetConnecting = false ;\r\n                    self.node.opacity = 255 ;\r\n                    self.tipsCount = 0 ;\r\n\r\n                    self.baseTips = \"网络异常，正在重连中\";\r\n                    self.lableMsg.string = self.baseTips ;\r\n                    self.schedule(self.updateTipShow,0.3);\r\n\r\n                }\r\n            }\r\n\r\n        },this);\r\n    },\r\n\r\n    //socket消息\r\n    addSocketListener: function(){\r\n        var self = this;\r\n        this.socketMessageListenerID = GlobalEventManager.getInstance().addEventListener(window.SocketMessage,\r\n            function( event) {\r\n\r\n                if(event == undefined)\r\n                {\r\n                    return ;\r\n                }\r\n                var type = event.tag ;\r\n                //连接服务器成功\r\n                if(type == window.MessageType.SOCKET_CONNECTED)\r\n                {\r\n                    self.onSocketConnected();\r\n                }\r\n                //断开连接\r\n                else if(type == window.MessageType.SOCKET_DISCONNECTED)\r\n                {\r\n                    self.onSocketDisconnected();\r\n                }\r\n                //连接中\r\n                else if(type == window.MessageType.SOCKET_CONNECTING)\r\n                {\r\n                }\r\n                //连接失败\r\n                else if(type == window.MessageType.MSG_NETWORK_FAILURE)\r\n                {\r\n\r\n                }\r\n                //收到消息\r\n                else if(type == window.MessageType.SOCKET_MESSAGE)\r\n                {\r\n                }\r\n            },this);\r\n\r\n    },\r\n\r\n    onSocketConnected : function () {\r\n        var self = this ;\r\n        self.node.opacity = 0 ;\r\n        self.unschedule(self.updateTipShow);\r\n    },\r\n\r\n    onSocketDisconnected : function () {\r\n\r\n        var self = this ;\r\n        self.unschedule(self.updateTipShow);\r\n        if(self.isNetConnecting){\r\n            self.node.opacity = 255 ;\r\n            self.tipsCount = 0 ;\r\n\r\n            self.baseTips = \"服务器连接失败，努力重连中\";\r\n            self.lableMsg.string = self.baseTips ;\r\n\r\n            self.schedule(self.updateTipShow,0.3);\r\n        }\r\n    },\r\n\r\n    updateTipShow : function (tips) {\r\n        this.tipsCount ++ ;\r\n        var tips = this.baseTips ;\r\n        var index = this.tipsCount%4 ;\r\n        for(var i =0; i<index; i++){\r\n            tips += \"。\";\r\n        }\r\n        this.lableMsg.string = tips ;\r\n\r\n    }\r\n\r\n});\r\n"
  ]
}