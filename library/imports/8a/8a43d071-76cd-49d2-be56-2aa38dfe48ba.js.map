{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "CARD_UP_POS",
    "CARD_COLOR_MARK",
    "CARD_VALUE_MARK",
    "cardEnum",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "cardData",
    "cardColor",
    "cardValue",
    "cardSelected",
    "CardBgImg",
    "Sprite",
    "ValueImg",
    "ColorImg",
    "SmallColorImg",
    "GrayLayer",
    "CardGroundImg",
    "ValueBlackFrame",
    "SpriteFrame",
    "ValueRedFrame",
    "ColorFrame",
    "SmallFrame",
    "CardGround",
    "CardBg",
    "onLoad",
    "initCard",
    "log",
    "getCardColorFromData",
    "getCardValueFromData",
    "node",
    "active",
    "index",
    "childrenCount",
    "children",
    "spriteFrame",
    "error",
    "getValueStringFromData",
    "CardDate",
    "runCardSelect",
    "Select",
    "position",
    "p",
    "getPosition",
    "x",
    "setCardSelecting",
    "bSelect",
    "opacity",
    "setBtnCard"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var CARD_UP_POS = 20;\r\nvar CARD_COLOR_MARK = 0xf0;\r\nvar CARD_VALUE_MARK = 0x0f;\r\n\r\nvar cardEnum = [\r\n    0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d, //♠️\r\n    0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d, //♥️\r\n    0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d, //️♣️\r\n    0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d, //♦\r\n    ]; //大小王\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        cardData : 0,\r\n        cardColor : 0,\r\n        cardValue : 0,\r\n        cardSelected : 0,\r\n        CardBgImg : cc.Sprite,\r\n        ValueImg : cc.Sprite,\r\n        ColorImg : cc.Sprite,\r\n        SmallColorImg : cc.Sprite,\r\n        GrayLayer : cc.Sprite,\r\n        CardGroundImg : cc.Sprite,\r\n\r\n        ValueBlackFrame : [cc.SpriteFrame],\r\n        ValueRedFrame : [cc.SpriteFrame],\r\n        ColorFrame : [cc.SpriteFrame],\r\n        SmallFrame : [cc.SpriteFrame],\r\n        CardGround : cc.SpriteFrame,\r\n        CardBg : cc.SpriteFrame,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n    },\r\n\r\n    initCard : function(cardData){\r\n        cc.log('Poker : initCard,cardData = ' + cardData);\r\n        this.cardData = cardData;\r\n        this.cardColor = this.getCardColorFromData(cardData);\r\n        this.cardValue = this.getCardValueFromData(cardData);\r\n        this.CardGroundImg.node.active = false;\r\n        cc.log(\"Poker : initCard,cardValue = \" + this.cardValue);\r\n        if (cardData == 0)\r\n        {\r\n            //牌背\r\n            for (var index = 0;index < this.CardBgImg.node.childrenCount;index++)\r\n            {\r\n                this.CardBgImg.node.children[index].active = false;\r\n            }\r\n            this.CardBgImg.spriteFrame = this.CardGround;\r\n        }\r\n        else\r\n        {\r\n            this.CardBgImg.node.active = true;\r\n            this.ColorImg.node.active = true;\r\n            this.ValueImg.node.active = true;\r\n            this.SmallColorImg.node.active = true;\r\n            this.GrayLayer.node.active = false;\r\n            this.CardBgImg.spriteFrame = this.CardBg;\r\n            //牌面\r\n            if(this.cardColor == 0 || this.cardColor == 2)\r\n            {\r\n                this.ColorImg.spriteFrame = this.ColorFrame[this.cardColor];\r\n                this.SmallColorImg.spriteFrame = this.SmallFrame[this.cardColor];\r\n                this.ValueImg.spriteFrame = this.ValueBlackFrame[this.cardValue - 1];\r\n            }\r\n            else if(this.cardColor == 1 || this.cardColor == 3)\r\n            {\r\n                this.ColorImg.spriteFrame = this.ColorFrame[this.cardColor];\r\n                this.SmallColorImg.spriteFrame = this.SmallFrame[this.cardColor];\r\n                this.ValueImg.spriteFrame = this.ValueRedFrame[this.cardValue - 1];\r\n            }\r\n            else if(this.cardColor === 4)\r\n            {\r\n                //大小王\r\n                cc.error('Poker : initCard,cardColor error');\r\n            }\r\n            else{\r\n                cc.error('Poker : initCard,cardColor error');\r\n            }\r\n        }\r\n\r\n        cc.log(\"Poker : initCard,CardGroundImg.active = \" + this.CardGroundImg.node.active);\r\n    },\r\n\r\n    getValueStringFromData : function () {\r\n\r\n    },\r\n    \r\n    getCardColorFromData : function(CardDate)\r\n    {\r\n        return (CardDate & CARD_COLOR_MARK)>>4;\r\n    },\r\n    \r\n    getCardValueFromData : function(CardDate)\r\n    {\r\n        return (CardDate & CARD_VALUE_MARK);\r\n    },\r\n    \r\n    runCardSelect : function(Select)\r\n    {\r\n        cc.log('Poker : runCardSelect,bSelect = ',Select);\r\n\r\n        this.cardSelected = Select;\r\n        if (this.cardSelected == 1)\r\n        {\r\n            this.node.position = cc.p(this.node.getPosition().x, CARD_UP_POS);\r\n        }\r\n        else\r\n        {\r\n            this.node.position = cc.p(this.node.getPosition().x,0);\r\n        }\r\n    },\r\n\r\n    setCardSelecting : function(bSelect)\r\n    {\r\n        cc.log('Poker.setCardSelecting,bSelect = ' + bSelect);\r\n        this.cardSelected = bSelect;\r\n        if(bSelect == 1)\r\n        {\r\n            this.GrayLayer.node.opacity = 180;\r\n        }\r\n        else\r\n        {\r\n            this.GrayLayer.node.opacity = 0;\r\n        }\r\n    },\r\n    \r\n    setBtnCard : function () {\r\n        this.cardSelected = (this.cardSelected == 0 ? 1 : 0);\r\n        this.runCardSelect(this.cardSelected);\r\n    },\r\n\r\n});\r\n"
  ]
}