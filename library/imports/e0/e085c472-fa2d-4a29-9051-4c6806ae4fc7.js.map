{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "MessageResp",
    "require",
    "Cmd_Bullfight",
    "Bullfight_TableDetailRespPacket",
    "apply",
    "cmd",
    "US_RESP_TABLE_DETAIL_CMD_ID",
    "onMessage",
    "msg",
    "seq",
    "uid",
    "code",
    "desc",
    "SocketRetCode",
    "RET_SUCCESS",
    "cc",
    "log",
    "BASE64",
    "decoder",
    "param",
    "json",
    "JSON",
    "parse",
    "privateid",
    "tableid",
    "name",
    "gametype",
    "carrycoin",
    "minante",
    "mincarry",
    "maxcarry",
    "livetime",
    "remaintime",
    "bstart",
    "seats",
    "bullmul",
    "bowner",
    "bsitdown",
    "tstatus",
    "timeout",
    "roundnum",
    "bankeruid",
    "seaters",
    "totalcarry",
    "module",
    "exports"
  ],
  "mappings": ";;AAAA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,IAAIA,cAAcC,QAAQ,aAAR,CAAlB;AACA,IAAIC,gBAAgBD,QAAQ,eAAR,CAApB;AACA,SAASE,+BAAT,GAA2C;AACvCH,gBAAYI,KAAZ,CAAkB,IAAlB,EAAwB,EAAxB,EADuC,CACT;;AAE9B,SAAKC,GAAL,GAAWH,cAAcI,2BAAzB;AACA;AACA,SAAKC,SAAL,GAAiB,UAAUC,GAAV,EAAe;;AAE5B,aAAKC,GAAL,GAAWD,IAAIC,GAAf;AACA,aAAKC,GAAL,GAAWF,IAAIE,GAAf;AACA,aAAKC,IAAL,GAAYH,IAAIG,IAAhB;AACA,aAAKC,IAAL,GAAYJ,IAAII,IAAhB;AACA,YAAG,KAAKD,IAAL,GAAYE,cAAcC,WAA7B,EACI;AACJC,WAAGC,GAAH,CAAO,6CAA6CC,OAAOC,OAAP,CAAeV,IAAIW,KAAnB,CAApD;AACA,YAAIC,OAAOC,KAAKC,KAAL,CAAWL,OAAOC,OAAP,CAAeV,IAAIW,KAAnB,CAAX,CAAX;AACA,aAAKI,SAAL,GAAkBH,KAAKG,SAAvB;AACA,aAAKC,OAAL,GAAkBJ,KAAKI,OAAvB;AACA,aAAKC,IAAL,GAAkBL,KAAKK,IAAvB;AACA,aAAKC,QAAL,GAAkBN,KAAKM,QAAvB;AACA,aAAKC,SAAL,GAAkBP,KAAKO,SAAvB;AACA,aAAKC,OAAL,GAAkBR,KAAKQ,OAAvB;AACA,aAAKC,QAAL,GAAkBT,KAAKS,QAAvB;AACA,aAAKC,QAAL,GAAkBV,KAAKU,QAAvB;AACA,aAAKC,QAAL,GAAkBX,KAAKW,QAAvB;AACA,aAAKC,UAAL,GAAkBZ,KAAKY,UAAvB;AACA,aAAKC,MAAL,GAAkBb,KAAKa,MAAvB;AACA,aAAKC,KAAL,GAAkBd,KAAKc,KAAvB;AACA,aAAKC,OAAL,GAAkBf,KAAKe,OAAvB;AACA,aAAKC,MAAL,GAAkBhB,KAAKgB,MAAvB;AACA,aAAKC,QAAL,GAAkBjB,KAAKiB,QAAvB;AACA,aAAKC,OAAL,GAAkBlB,KAAKkB,OAAvB;AACA,aAAKC,OAAL,GAAkBnB,KAAKmB,OAAvB;AACA,aAAKC,QAAL,GAAkBpB,KAAKoB,QAAvB;AACA,aAAKC,SAAL,GAAkBrB,KAAKqB,SAAvB;AACA,aAAKC,OAAL,GAAkBtB,KAAKsB,OAAvB;AACA,aAAKC,UAAL,GAAkBvB,KAAKuB,UAAvB;AAEH,KAhCD;AAiCH;;AAEDC,OAAOC,OAAP,GAAkB1C,+BAAlB",
  "file": "unknown",
  "sourcesContent": [
    "/**\r\n * Created by shrimp on 17/3/2.\r\n */\r\n\r\n/*\r\n*\r\n* /桌子详情\r\n type US_RESP_TABLE_DETAIL_T struct {\r\n JsonHead\r\n RespHead\r\n Param string `json:\"param\"` //base64\r\n }\r\n type DETAIL_SEATER_T struct {\r\n Uid            uint32   `json:\"uid\"`\r\n Name           string   `json:\"name\"`\r\n HeadUrl        string   `json:\"headurl\"`\r\n Sex            int      `json:\"sex\"`\r\n Gold           int      `json:\"gold\"`\r\n Diamond        int      `json:\"diamond\"`\r\n Coin           int      `json:\"coin\"`      //现在身上带入的金币\r\n TotalCarryCoin int      `json:\"total\"`     //总带入金币\r\n WinCoin        int      `json:\"win\"`       //输赢多少金币\r\n SeatId         int8     `json:\"seatid\"`    //座位id\r\n Status         int      `json:\"status\"`    //桌上玩家状态\r\n CallType       int8     `json:\"calltype\"`  //抢庄类型\r\n MaxBetMul      int      `json:\"maxbetmul\"` //最大下注倍数\r\n BetMul         int      `json:\"betmul\"`    //下注倍数\r\n BhaveCard      bool     `json:\"bhavecard\"` //是否有牌\r\n BopenCard      bool     `json:\"bopencard\"` //是否开牌\r\n Cards          []uint16 `json:\"cards\"`     //牌数据\r\n BullType       int      `json::bulltype:`  //牛牛类型\r\n FinalCoin      int      `json:\"finalcoin\"` //这一局输赢结果\r\n }\r\n\r\n //进入桌子返回\r\n type SBF_DETAIL_TABLE_T struct {\r\n TableId    int32             `json:\"tableid\"`    //桌子ID\r\n TableName  string            `json:\"name\"`       //桌子名称\r\n GameType   int32             `json:\"gametype\"`   //桌子类型(闭牌抢庄,四张抢庄)\r\n MinAnte    int               `json:\"minante\"`    //最小下注\r\n MinCarry   int               `json:\"mincarry\"`   //最小带入\r\n LiveTime   int64             `json:\"livetime\"`   //桌子总时间\r\n RemainTime int64             `json:\"remaintime\"` //剩余时间\r\n Bstart     int8              `json:\"bstart\"`     //桌子是否开始\r\n Seats      int               `json:\"seats\"`      //座位数\r\n BullMul    []int32           `json:\"bullmul\"`    //倍率\r\n Bowner     int8              `json:\"bowner\"`     //是否是桌主\r\n Bsitdown   int8              `json:\"bsitdown\"`   //是否入座\r\n Tstatus    int               `json:\"tstatus\"`    //桌子状态\r\n Timeout    int               `json:\"timeout\"`    //桌子处于某个状态下的剩余时间\r\n RoundNum   int               `json:\"roundnum\"`   //当前第几手牌\r\n BankerUid  uint32            `json:\"bankeruid\"`  //庄家UID\r\n Seaters    []DETAIL_SEATER_T `json:\"seaters\"`    //桌位上的玩家信息\r\n }\r\n* */\r\n\r\nvar MessageResp = require('MessageResp');\r\nvar Cmd_Bullfight = require('Cmd_Bullfight');\r\nfunction Bullfight_TableDetailRespPacket() {\r\n    MessageResp.apply(this, []);  //集成父类数据\r\n\r\n    this.cmd = Cmd_Bullfight.US_RESP_TABLE_DETAIL_CMD_ID;\r\n    //接收的数据\r\n    this.onMessage = function (msg) {\r\n\r\n        this.seq = msg.seq;\r\n        this.uid = msg.uid;\r\n        this.code = msg.code;\r\n        this.desc = msg.desc;\r\n        if(this.code < SocketRetCode.RET_SUCCESS)\r\n            return;\r\n        cc.log(\"Bullfight_TableDetailRespPacket,param = \" + BASE64.decoder(msg.param));\r\n        var json = JSON.parse(BASE64.decoder(msg.param));\r\n        this.privateid  = json.privateid;\r\n        this.tableid    = json.tableid;\r\n        this.name       = json.name;\r\n        this.gametype   = json.gametype;\r\n        this.carrycoin  = json.carrycoin;\r\n        this.minante    = json.minante;\r\n        this.mincarry   = json.mincarry;\r\n        this.maxcarry   = json.maxcarry;\r\n        this.livetime   = json.livetime;\r\n        this.remaintime = json.remaintime;\r\n        this.bstart     = json.bstart;\r\n        this.seats      = json.seats;\r\n        this.bullmul    = json.bullmul;\r\n        this.bowner     = json.bowner;\r\n        this.bsitdown   = json.bsitdown;\r\n        this.tstatus    = json.tstatus;\r\n        this.timeout    = json.timeout;\r\n        this.roundnum   = json.roundnum;\r\n        this.bankeruid  = json.bankeruid;\r\n        this.seaters    = json.seaters;\r\n        this.totalcarry = json.totalcarry;\r\n\r\n    };\r\n}\r\n\r\nmodule.exports =  Bullfight_TableDetailRespPacket;"
  ]
}