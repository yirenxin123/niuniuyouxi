{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "MessageResp",
    "require",
    "EnterRoomRespPacket",
    "apply",
    "cmd",
    "window",
    "US_RESP_ENTER_GAME_CMD_ID",
    "tableid",
    "name",
    "gametype",
    "mixante",
    "livetime",
    "remaintime",
    "bstart",
    "seats",
    "bullmul",
    "bowner",
    "supercost",
    "giftcosts",
    "seaters",
    "onMessage",
    "msg",
    "seq",
    "uid",
    "code",
    "desc",
    "SocketRetCode",
    "RET_SUCCESS",
    "param",
    "undefined",
    "cc",
    "log",
    "BASE64",
    "decoder",
    "json",
    "JSON",
    "parse",
    "ustatus",
    "tstatus",
    "mincarry",
    "maxcarry",
    "totalcarry",
    "module",
    "exports"
  ],
  "mappings": ";;AAAA;;;AAGA,IAAIA,cAAcC,QAAQ,aAAR,CAAlB;;AAEA,SAASC,mBAAT,GAA+B;AAC3BF,gBAAYG,KAAZ,CAAkB,IAAlB,EAAwB,EAAxB,EAD2B,CACG;;AAE9B,SAAKC,GAAL,GAAWC,OAAOC,yBAAlB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,MAAL,GAAiB,CAAjB;AACA,SAAKC,KAAL,GAAiB,CAAjB;AACA,SAAKC,OAAL,GAAiB,EAAjB;AACA,SAAKC,MAAL,GAAiB,CAAjB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA;AACA,SAAKC,SAAL,GAAiB,UAAUC,GAAV,EAAe;;AAE5B;AACA;AACA;AACA;AACA,aAAKC,GAAL,GAAWD,IAAIC,GAAf;AACA,aAAKC,GAAL,GAAWF,IAAIE,GAAf;AACA,aAAKC,IAAL,GAAYH,IAAIG,IAAhB;AACA,aAAKC,IAAL,GAAYJ,IAAII,IAAhB;;AAEA,YAAG,KAAKD,IAAL,GAAYE,cAAcC,WAA7B,EACI;AACJ,aAAKC,KAAL,GAAaP,IAAIO,KAAjB;;AAEA,YAAG,KAAKA,KAAL,IAAc,EAAd,IAAoB,KAAKA,KAAL,IAAcC,SAArC,EACA;AACIC,eAAGC,GAAH,CAAO,wBAAwBC,OAAOC,OAAP,CAAeZ,IAAIO,KAAnB,CAA/B;AACA,gBAAIM,OAAOC,KAAKC,KAAL,CAAWJ,OAAOC,OAAP,CAAeZ,IAAIO,KAAnB,CAAX,CAAX;AACA,iBAAKrB,OAAL,GAAkB2B,KAAK3B,OAAvB;AACA,iBAAKC,IAAL,GAAkB0B,KAAK1B,IAAvB;AACA,iBAAKC,QAAL,GAAkByB,KAAKzB,QAAvB;AACA,iBAAKC,OAAL,GAAkBwB,KAAKxB,OAAvB;AACA,iBAAKC,QAAL,GAAkBuB,KAAKvB,QAAvB;AACA,iBAAKC,UAAL,GAAkBsB,KAAKtB,UAAvB;AACA,iBAAKC,MAAL,GAAiBqB,KAAKrB,MAAtB;AACA,iBAAKC,KAAL,GAAiBoB,KAAKpB,KAAtB;AACA,iBAAKC,OAAL,GAAiBmB,KAAKnB,OAAtB;AACA,iBAAKC,MAAL,GAAiBkB,KAAKlB,MAAtB;AACA,iBAAKG,OAAL,GAAiBe,KAAKf,OAAtB;AACA,iBAAKkB,OAAL,GAAiBH,KAAKG,OAAtB;AACA,iBAAKC,OAAL,GAAiBJ,KAAKI,OAAtB;AACA,iBAAKrB,SAAL,GAAiBiB,KAAKjB,SAAtB;AACA,iBAAKC,SAAL,GAAiBgB,KAAKhB,SAAtB;AACA,iBAAKqB,QAAL,GAAgBL,KAAKK,QAArB;AACA,iBAAKC,QAAL,GAAgBN,KAAKM,QAArB;AACA,iBAAKC,UAAL,GAAkBP,KAAKO,UAAvB;AACH;;AAGD;;;;;;;;;;;;;AAcH,KAtDD;AAuDH;;AAEDC,OAAOC,OAAP,GAAkBzC,mBAAlB",
  "file": "unknown",
  "sourcesContent": [
    "/**\r\n * Created by shrimp on 17/2/26.\r\n */\r\nvar MessageResp = require(\"MessageResp\");\r\n\r\nfunction EnterRoomRespPacket() {\r\n    MessageResp.apply(this, []);  //集成父类数据\r\n\r\n    this.cmd = window.US_RESP_ENTER_GAME_CMD_ID;\r\n    this.tableid = 0;\r\n    this.name = \"\";\r\n    this.gametype = 0;\r\n    this.mixante = 0;\r\n    this.livetime = 0;\r\n    this.remaintime = 0;\r\n    this.bstart    = 0;\r\n    this.seats     = 0;\r\n    this.bullmul   = [];\r\n    this.bowner    = 0;\r\n    this.supercost = 0;\r\n    this.giftcosts = [];\r\n    this.seaters = \"\";\r\n    //接收的数据\r\n    this.onMessage = function (msg) {\r\n\r\n        //{\"cmd\":6553602,\"seq\":18,\"uid\":10006,\"code\":0,\"desc\":\"\",\r\n        // {\"tableid\":0,\"name\":\"qweq\",\"tstatus\":0,\"gametype\":1,\"minante\":1,\"mincarry\":50,\r\n        // \"livetime\":1800,\"remaintime\":1800,\"bstart\":0,\"seats\":6,\"bullmul\":[1,1,1,1,1,1,1,1,2,3,0,4,0,0,0,0],\r\n        // \"bowner\":1,\"bsitdown\":0,\"ustatus\":0,\"gold\":10000,\"diamond\":9992,\"seaters\":[]}\r\n        this.seq = msg.seq;\r\n        this.uid = msg.uid;\r\n        this.code = msg.code;\r\n        this.desc = msg.desc;\r\n\r\n        if(this.code < SocketRetCode.RET_SUCCESS)\r\n            return;\r\n        this.param = msg.param;\r\n\r\n        if(this.param != \"\" && this.param != undefined)\r\n        {\r\n            cc.log(\"EnterRoomRespPacket\" + BASE64.decoder(msg.param));\r\n            var json = JSON.parse(BASE64.decoder(msg.param));\r\n            this.tableid    = json.tableid;\r\n            this.name       = json.name;\r\n            this.gametype   = json.gametype;\r\n            this.mixante    = json.mixante;\r\n            this.livetime   = json.livetime;\r\n            this.remaintime = json.remaintime;\r\n            this.bstart    = json.bstart;\r\n            this.seats     = json.seats;\r\n            this.bullmul   = json.bullmul;\r\n            this.bowner    = json.bowner;\r\n            this.seaters   = json.seaters;\r\n            this.ustatus   = json.ustatus;\r\n            this.tstatus   = json.tstatus;\r\n            this.supercost = json.supercost;\r\n            this.giftcosts = json.giftcosts;\r\n            this.mincarry = json.mincarry;\r\n            this.maxcarry = json.maxcarry;\r\n            this.totalcarry = json.totalcarry;\r\n        }\r\n\r\n\r\n        /*\r\n        * TableId    int32      `json:\"tableid\"`    //桌子ID\r\n         TableName  string     `json:\"name\"`       //桌子名称\r\n         GameType   int32      `json:\"gametype\"`   //桌子类型(闭牌抢庄,四张抢庄)\r\n         MixAnte    int        `json:\"mixante\"`    //最小下注\r\n         LiveTime   int        `json:\"livetime\"`   //桌子总时间\r\n         RemainTime int        `json:\"remaintime\"` //剩余时间\r\n         Bstart     int8       `json:\"bstart\"`     //桌子是否开始\r\n         Seats      int8      `json:\"seats\"`       //座位数\r\n         BullMul    []int32    `json:\"bullmul\"`    //倍率\r\n         Bowner     int8       `json:\"bowner\"`     //是否是桌主\r\n         Seaters    []SEATER_T `json:\"seaters\"`    //桌位上的玩家信息\r\n        * */\r\n\r\n    };\r\n}\r\n\r\nmodule.exports =  EnterRoomRespPacket;"
  ]
}