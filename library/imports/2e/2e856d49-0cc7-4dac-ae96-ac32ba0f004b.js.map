{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BasePop",
    "require",
    "RollMsgT",
    "strMsg",
    "iType",
    "cc",
    "Class",
    "extends",
    "properties",
    "speaker",
    "Sprite",
    "speakerTxtHtml",
    "RichText",
    "speakerHolder",
    "Node",
    "onLoad",
    "_super",
    "queueSpeakerMsg",
    "Array",
    "isShowRollFinish",
    "node",
    "active",
    "baseX",
    "x",
    "remaindWidth",
    "onDestroy",
    "GlobalEventManager",
    "getInstance",
    "removeListener",
    "socketMessageListenerID",
    "onSceneMsg",
    "event",
    "msg",
    "data",
    "popView",
    "btn",
    "ledInfo",
    "addSpeakerMsg",
    "text",
    "onMessage",
    "cmd",
    "window",
    "SERVER_SPEAK_NEW_CMD",
    "trumpetMsg",
    "trumpetType",
    "content",
    "contenttype",
    "undefined",
    "ss",
    "String",
    "re",
    "newContent",
    "replace",
    "re2",
    "push",
    "showSpeaker",
    "y",
    "height",
    "string",
    "size",
    "width",
    "moveTo",
    "p",
    "delay",
    "delayTime",
    "actionCallBack",
    "callFunc",
    "moveDownCallback",
    "actionall",
    "sequence",
    "runAction",
    "winSize",
    "director",
    "getWinSize",
    "contentSize",
    "_linesWidth",
    "moveX",
    "moveLeftCallback",
    "moveBy",
    "length",
    "activeInHierarchy",
    "update",
    "dt",
    "self",
    "pop"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "/**\r\n *\r\n *\r\n * 滚动消息  拖入场景 后 自己管理自己\r\n *\r\n *\r\n * 当前版本1.3.2 richtext 有bug  等待官方解决\r\n */\r\n\r\n\r\nvar BasePop = require('BasePop');\r\n\r\n//var ServerSpeakPacket = require('ServerSpeakPacket');\r\nfunction RollMsgT() {\r\n    this.strMsg = \"\" ;\r\n    this.iType = 0 ;\r\n}\r\n\r\n\r\n cc.Class({\r\n    extends: BasePop,\r\n\r\n    properties: {\r\n        speaker:cc.Sprite,\r\n        speakerTxtHtml : cc.RichText,\r\n        speakerHolder : cc.Node,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._super() ;\r\n\r\n        this.queueSpeakerMsg = new Array();\r\n        this.isShowRollFinish = true ;\r\n\r\n        this.speaker.node.active = false ;\r\n\r\n        this.baseX = this.speakerTxtHtml.node.x;\r\n\r\n        this.remaindWidth = 960+this.speakerTxtHtml.node.x;\r\n    },\r\n\r\n\r\n    onDestroy : function () {\r\n        GlobalEventManager.getInstance().removeListener(this.socketMessageListenerID);\r\n    },\r\n\r\n     onSceneMsg : function (event) {\r\n         var msg = event.data;\r\n         if (msg.popView == \"HallScene\") {\r\n             if (msg.btn == \"RollMsg\") {\r\n                 var ledInfo = msg.data;\r\n\r\n                 this.addSpeakerMsg(ledInfo.text,0);\r\n\r\n             }\r\n         }\r\n     },\r\n\r\n     onMessage :function (event) {\r\n         var msg = event.data;\r\n         var cmd = msg.cmd ;\r\n         switch(cmd)\r\n         {\r\n             case window.SERVER_SPEAK_NEW_CMD:\r\n\r\n                 this.addSpeakerMsg(msg.trumpetMsg,msg.trumpetType);\r\n                 break ;\r\n\r\n\r\n         }\r\n     },\r\n\r\n    addSpeakerMsg : function (content, contenttype) {\r\n        if(content ===undefined || content == \"\"){\r\n            return ;\r\n        }\r\n        // <color = 0xFFFFFFFF> 洪福齐天,玩家</color><color = 0x00b8c8FF>元大炮</color><color = 0xFFFFFFFF>在炸金花1元场赢取</color><color = 0x00d236FF>5000金币</color><color = 0xFFFFFFFF>,富甲一方</color>\r\n\r\n\r\n        var ss = String(content);\r\n        var re = /0x/g;\r\n        var newContent = ss.replace(re,\"#\");\r\n        var re2 = /FF>/g ;\r\n        newContent = newContent.replace(re2,\">\") ;\r\n\r\n        var msg = new RollMsgT();\r\n        msg.iType = contenttype;\r\n        msg.strMsg = newContent;\r\n\r\n        this.queueSpeakerMsg.push(msg) ;\r\n\r\n    },\r\n\r\n    showSpeaker : function (content, contenttype) {\r\n        if(content == \"\"){\r\n            return ;\r\n        }\r\n        this.speakerTxtHtml.node.active = true ;\r\n        this.speakerTxtHtml.node.x = this.baseX;\r\n        this.speakerTxtHtml.node.y =  this.speakerHolder.height*2;\r\n        this.speakerTxtHtml.string = content;\r\n\r\n\r\n        var size = cc.size(this.speakerHolder.width,this.speakerHolder.height);\r\n\r\n        var moveTo = cc.moveTo(1.0, cc.p(this.speakerTxtHtml.node.x,0));\r\n        var delay = cc.delayTime(2.0);\r\n        var actionCallBack = cc.callFunc(this.moveDownCallback,this) ;\r\n        var actionall = cc.sequence(moveTo,delay,actionCallBack);\r\n        this.speakerTxtHtml.node.runAction(actionall);\r\n\r\n    },\r\n\r\n    moveDownCallback : function () {\r\n        var winSize = cc.director.getWinSize();\r\n        var contentSize = cc.size(this.speakerTxtHtml._linesWidth[0],this.speakerTxtHtml.node.height);\r\n\r\n        var moveX = 0;\r\n        if(this.remaindWidth < (contentSize.width - winSize.width)|| this.speakerHolder.width<contentSize.width)\r\n        {\r\n            moveX = contentSize.width  + this.remaindWidth;\r\n        }\r\n\r\n        if(moveX <= 0)\r\n        {\r\n            this.moveLeftCallback();\r\n        }\r\n        else\r\n        {\r\n            var moveBy = cc.moveBy(moveX/300, cc.p(moveX > 0 ? -moveX : 0,0));\r\n            var delay = cc.delayTime(0.8);\r\n            var actionCallBack = cc.callFunc(this.moveLeftCallback,this);\r\n            var actionall = cc.sequence(moveBy,delay,actionCallBack);\r\n            this.speakerTxtHtml.node.runAction(actionall);\r\n        }\r\n    },\r\n    moveLeftCallback : function () {\r\n        this.isShowRollFinish = true;\r\n        if(this.speakerTxtHtml)\r\n        {\r\n            // speakerTxtHtml.removeFromParentAndCleanup(true);\r\n            this.speakerTxtHtml.node.active = false;\r\n        }\r\n\r\n        if(( this.queueSpeakerMsg.length == 0) && this.speaker && this.speaker.node.activeInHierarchy) ;\r\n        {\r\n            this.speaker.node.active = false;\r\n        }\r\n    },\r\n\r\n\r\n    update: function (dt) {\r\n        var self = this ;\r\n        if(self.queueSpeakerMsg.length > 0 && self.isShowRollFinish)\r\n        {\r\n            if(self.speaker && !self.speaker.node.active){\r\n                self.speaker.node.active = true  ;\r\n            }\r\n\r\n            this.isShowRollFinish = false;\r\n            var msg = self.queueSpeakerMsg.pop();\r\n            self.showSpeaker(msg.strMsg,msg.iType);\r\n        }\r\n    },\r\n\r\n\r\n});\r\n\r\n\r\n"
  ]
}