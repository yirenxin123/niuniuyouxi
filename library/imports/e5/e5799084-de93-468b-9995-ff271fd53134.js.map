{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BasePop",
    "require",
    "cc",
    "Class",
    "extends",
    "properties",
    "WebView",
    "onLoad",
    "_super",
    "LeftInTo",
    "node",
    "calllbackBtn",
    "event",
    "CustonEventData",
    "BtnName",
    "target",
    "getName",
    "dismiss",
    "setWebViewUrl",
    "url"
  ],
  "mappings": ";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASJ,OADJ;;AAGLK,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,iBAAUJ,GAAGI;AAXL,KAHP;;AAiBL;AACAC,YAAQ,kBAAY;AAChB,aAAKC,MAAL;AACA,aAAKC,QAAL,CAAc,KAAKC,IAAnB;AACH,KArBI;;AAuBL;AACA;;AAEA;;AAEAC,kBAAe,sBAAUC,KAAV,EAAgBC,eAAhB,EAAiC;AAC5C,YAAIC,UAAUF,MAAMG,MAAN,CAAaC,OAAb,EAAd;AACA,YAAGF,WAAW,UAAd,EACA;AACI,iBAAKG,OAAL;AACH;AACJ,KAlCI;;AAoCLC,mBAAgB,uBAAUC,GAAV,EAAe;AAC3B,aAAKb,OAAL,CAAaa,GAAb,GAAmBA,GAAnB;AACH;AAtCI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "var BasePop = require('BasePop');\r\ncc.Class({\r\n    extends: BasePop,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        WebView : cc.WebView,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._super();\r\n        this.LeftInTo(this.node);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n    \r\n    calllbackBtn : function (event,CustonEventData) {\r\n        var BtnName = event.target.getName();\r\n        if(BtnName == \"BtnClose\")\r\n        {\r\n            this.dismiss();\r\n        }\r\n    },\r\n    \r\n    setWebViewUrl  :function (url) {\r\n        this.WebView.url = url;\r\n    }\r\n});\r\n"
  ]
}