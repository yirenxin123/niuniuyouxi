{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "UtilTool",
    "require",
    "MusicMgr",
    "Audio_Common",
    "GameSystem",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "Time",
    "Label",
    "Content",
    "onLoad",
    "msg",
    "setMessageCellMsg",
    "string",
    "BASE64",
    "decoder",
    "getFormatDataDetail",
    "time",
    "log",
    "JSON",
    "stringify",
    "callbackBtn",
    "event",
    "CustomEventData",
    "btnName",
    "target",
    "getName",
    "playEffect",
    "AUDIO_BTN_CLICK",
    "dismiss"
  ],
  "mappings": ";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,eAAeF,QAAQ,cAAR,CAAnB;AACA,IAAIG,aAAaH,QAAQ,YAAR,CAAjB;;AAEAI,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAAOL,GAAGM,KAXF;AAYRC,iBAAUP,GAAGM;AAZL,KAHP;;AAoBL;AACAE,YAAQ,kBAAY;AAChB,aAAKC,GAAL,GAAW,IAAX;AACH,KAvBI;;AAyBL;AACA;;AAEA;;AAEAC,uBAAoB,2BAAUD,GAAV,EAAe;AAC/B,aAAKA,GAAL,GAAWA,GAAX;AACA,aAAKF,OAAL,CAAaI,MAAb,GAAsBC,OAAOC,OAAP,CAAeJ,IAAIA,GAAnB,CAAtB;AACA,aAAKJ,IAAL,CAAUM,MAAV,GAAmBhB,SAASmB,mBAAT,CAA6BL,IAAIM,IAAjC,CAAnB;AACAf,WAAGgB,GAAH,CAAO,yCAAyCC,KAAKC,SAAL,CAAeT,GAAf,CAAhD;AACH,KAnCI;;AAqCLU,iBAAc,qBAASC,KAAT,EAAeC,eAAf,EAAgC;AAC1CrB,WAAGgB,GAAH,CAAO,+CAA+CK,eAAtD;AACA,YAAIC,UAAUF,MAAMG,MAAN,CAAaC,OAAb,EAAd;AACAxB,WAAGgB,GAAH,CAAO,uCAAuCM,OAA9C;AACAzB,iBAAS4B,UAAT,CAAoB3B,aAAa4B,eAAjC;AACA,YAAIJ,WAAW,OAAf,EAAwB;AACpB,iBAAKK,OAAL;AACH;AACJ;;AA7CI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "var UtilTool = require('UtilTool');\r\nvar MusicMgr = require('MusicMgr');\r\nvar Audio_Common = require('Audio_Common');\r\nvar GameSystem = require(\"GameSystem\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        Time : cc.Label,\r\n        Content : cc.Label,\r\n    },\r\n\r\n\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.msg = null;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n    \r\n    setMessageCellMsg : function (msg) {\r\n        this.msg = msg;\r\n        this.Content.string = BASE64.decoder(msg.msg);\r\n        this.Time.string = UtilTool.getFormatDataDetail(msg.time);\r\n        cc.log('MessageCell.setMessageCellMsg,msg = ' + JSON.stringify(msg));\r\n    },\r\n\r\n    callbackBtn : function(event,CustomEventData) {\r\n        cc.log(\"MessageCell.callbackBtn,CustomEventData = \" + CustomEventData);\r\n        var btnName = event.target.getName();\r\n        cc.log(\"MessageCell.callbackBtn,btnName = \" + btnName);\r\n        MusicMgr.playEffect(Audio_Common.AUDIO_BTN_CLICK);\r\n        if (btnName == \"Click\") {\r\n            this.dismiss();\r\n        }\r\n    }\r\n    \r\n});\r\n"
  ]
}