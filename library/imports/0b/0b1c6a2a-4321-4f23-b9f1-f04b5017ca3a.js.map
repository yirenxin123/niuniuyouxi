{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BaseView",
    "require",
    "SocketManager",
    "MessageFactory",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "bg",
    "default",
    "type",
    "Node",
    "onLoad",
    "log",
    "localMessageListenerID",
    "httpMessageListenerID",
    "socketMessageListenerID",
    "addSocketListener",
    "addHttpListener",
    "addLocalMessageListener",
    "node",
    "on",
    "EventType",
    "TOUCH_START",
    "event",
    "stopPropagation",
    "bind",
    "onDestroy",
    "GlobalEventManager",
    "getInstance",
    "removeListener",
    "self",
    "addEventListener",
    "window",
    "SocketMessage",
    "undefined",
    "tag",
    "MessageType",
    "SOCKET_CONNECTED",
    "SOCKET_DISCONNECTED",
    "SOCKET_CONNECTING",
    "MSG_NETWORK_FAILURE",
    "SOCKET_MESSAGE",
    "onMessage",
    "SCENE_MSG",
    "onSceneMsg",
    "HttpMessage",
    "HttpMessageType",
    "HTTP_NOTIFICATION",
    "onHttpResponse",
    "msg",
    "NOTIFY_HTTP_RSP_ERROR",
    "LocalMessage",
    "onLocalMessage",
    "LocalMsgType",
    "SENDMSG_TIMEOUT",
    "msgSendTimeOut",
    "UPDATE_USERINFO",
    "isSucceed",
    "scaleTo",
    "flag",
    "setScale",
    "scaleT0",
    "easing",
    "easeBackOut",
    "runAction",
    "getUserDetail",
    "detail",
    "createMessageReq",
    "US_REQ_USER_DETAIL_CMD_ID",
    "send",
    "LeftInTo",
    "winSize",
    "director",
    "getWinSize",
    "moveTo",
    "p",
    "position",
    "x",
    "width",
    "y",
    "dismiss",
    "removeFromParent",
    "destroy"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var BaseView = require(\"BaseView\");\r\nvar SocketManager = require('SocketManager');\r\nvar MessageFactory = require('MessageFactory');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bg : {\r\n            default : null,\r\n            type:cc.Node\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        cc.log(\"BasePop\");\r\n        this.localMessageListenerID  = -1 ;\r\n        this.httpMessageListenerID   = -1 ;\r\n        this.socketMessageListenerID = -1;\r\n\r\n        // socket消息\r\n        this.addSocketListener();\r\n\r\n        // http消息\r\n        this.addHttpListener();\r\n\r\n        // 本地消息监听\r\n        this.addLocalMessageListener();\r\n\r\n        cc.log('BasePop:onLoad');\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START, function(event){\r\n            cc.log(\"stop event\");\r\n            event.stopPropagation();\r\n\r\n        }.bind(this));\r\n    },\r\n\r\n    onDestroy : function () {\r\n        cc.log('BasePop:onDestroy');\r\n\r\n        cc.log(\"BasePop.socketMessageListenerID=\", this.httpMessageListenerID);\r\n        if (this.httpMessageListenerID != -1)\r\n        {\r\n            GlobalEventManager.getInstance().removeListener(this.httpMessageListenerID);\r\n            this.httpMessageListenerID = -1;\r\n        }\r\n\r\n        cc.log(\"BasePop.localMessageListenerID=\", this.localMessageListenerID);\r\n        if (this.localMessageListenerID != -1)\r\n        {\r\n            GlobalEventManager.getInstance().removeListener(this.localMessageListenerID);\r\n            this.localMessageListenerID = -1;\r\n        }\r\n\r\n        cc.log(\"BasePop.socketMessageListenerID=\", this.socketMessageListenerID);\r\n        if (this.socketMessageListenerID != -1)\r\n        {\r\n            GlobalEventManager.getInstance().removeListener(this.socketMessageListenerID);\r\n            this.socketMessageListenerID = -1;\r\n        }\r\n    },\r\n\r\n    //socket消息\r\n    addSocketListener: function(){\r\n        var self = this;\r\n        this.socketMessageListenerID = GlobalEventManager.getInstance().addEventListener(window.SocketMessage,\r\n            function( event) {\r\n                if(event == undefined)\r\n                {\r\n                    return ;\r\n                }\r\n                var type = event.tag ;\r\n                //连接服务器成功\r\n                if(type == window.MessageType.SOCKET_CONNECTED)\r\n                {\r\n                }\r\n                //断开连接\r\n                else if(type == window.MessageType.SOCKET_DISCONNECTED)\r\n                {\r\n                }\r\n                //连接中\r\n                else if(type == window.MessageType.SOCKET_CONNECTING)\r\n                {\r\n                }\r\n                //连接失败\r\n                else if(type == window.MessageType.MSG_NETWORK_FAILURE)\r\n                {\r\n\r\n                }\r\n                //收到消息\r\n                else if(type == window.MessageType.SOCKET_MESSAGE)\r\n                {\r\n                    self.onMessage(event);\r\n                }\r\n                else if(type == window.MessageType.SCENE_MSG)\r\n                {\r\n                    self.onSceneMsg(event);\r\n                }\r\n            }, this);\r\n        cc.log(\"BasePop.socketMessageListenerID=\", this.socketMessageListenerID);\r\n    },\r\n\r\n\r\n    //http消息监听\r\n    addHttpListener:function()\r\n    {\r\n        var self = this;\r\n        this.httpMessageListenerID =  GlobalEventManager.getInstance().addEventListener(window.HttpMessage,function (event) {\r\n            if(event == undefined)\r\n            {\r\n                return ;\r\n            }\r\n\r\n            var tag = event.tag ;\r\n\r\n            if(tag == window.HttpMessageType.HTTP_NOTIFICATION){\r\n                self.onHttpResponse(event.msg);\r\n            }else if(tag == window.HttpMessageType.NOTIFY_HTTP_RSP_ERROR){\r\n            }\r\n        }, this);\r\n        cc.log(\"BasePop.socketMessageListenerID=\", this.httpMessageListenerID);\r\n    },\r\n\r\n    //本地消息监听\r\n    addLocalMessageListener : function()\r\n    {\r\n        var self = this ;\r\n        this.localMessageListenerID = GlobalEventManager.getInstance().addEventListener(window.LocalMessage,\r\n                function( event) {\r\n                    self.onLocalMessage(event);\r\n                }, this);\r\n        cc.log(\"BasePop.localMessageListenerID=\", this.localMessageListenerID);\r\n    },\r\n\r\n    onMessage : function (event) {\r\n    },\r\n    \r\n    onLocalMessage : function (event) {\r\n        if(event == undefined)\r\n        {\r\n            return ;\r\n        }\r\n        var tag = event.tag ;\r\n\r\n        if(tag == window.LocalMsgType.SENDMSG_TIMEOUT)\r\n        {\r\n            this.msgSendTimeOut();\r\n        }\r\n        else if(tag == window.LocalMsgType.UPDATE_USERINFO){\r\n\r\n        }\r\n    },\r\n\r\n    onHttpResponse : function (event) {\r\n        if(event == undefined)\r\n        {\r\n            return ;\r\n        }\r\n        if(!event.isSucceed){\r\n            return ;\r\n        }\r\n    },\r\n\r\n    onSceneMsg : function (event) {\r\n    },\r\n\r\n    scaleTo : function( node, flag){\r\n        node.setScale(0);\r\n        var scaleT0 =  null;\r\n        if( flag ){\r\n            scaleT0 =  cc.scaleTo(0.1,1.0).easing(cc.easeBackOut()) ;\r\n        }else{\r\n            scaleT0 =  cc.scaleTo(0.1,0.8).easing(cc.easeBackOut()) ;\r\n        }\r\n\r\n        node.runAction(scaleT0);\r\n    },\r\n\r\n    getUserDetail : function () {\r\n        cc.log(\"BaseScene.getUserDetail\");\r\n        var detail = MessageFactory.createMessageReq(window.US_REQ_USER_DETAIL_CMD_ID);\r\n        if (detail)\r\n        {\r\n            detail.send();\r\n        }\r\n    },\r\n\r\n    LeftInTo : function (node) {\r\n        var winSize = cc.director.getWinSize();\r\n        //node.position.x = node.position.x - winSize.width;\r\n        //node.setPositionX(node.position.x - winSize.width);\r\n        node.runAction(cc.moveTo(0.1,cc.p(node.position.x + winSize.width,node.position.y)));\r\n    },\r\n\r\n    dismiss : function() {\r\n        cc.log('BasePop:dismiss');\r\n        this.node.removeFromParent(true);\r\n        this.destroy();\r\n    },\r\n});\r\n"
  ]
}